var Conversions = Core.Conversions;
var Debug = Core.Debug;
var Path2D = Core.Path2D;
var Point2D = Core.Point2D;
var Point3D = Core.Point3D;
var Matrix2D = Core.Matrix2D;
var Matrix3D = Core.Matrix3D;
var Mesh3D = Core.Mesh3D;
var Plugin = Core.Plugin;
var Tess = Core.Tess;
var Sketch2D = Core.Sketch2D;
var Solid = Core.Solid;
var Vector2D = Core.Vector2D;
var Vector3D = Core.Vector3D;

var cutSize = 100;
var cutDistance = 200;

// create a triangle
function createTriangle() {
    var mesh = new Mesh3D();
    mesh.triangle([0, 0, 0], [10, 0, 0], [5, 10, 0]);
    mesh.triangle([5, 5, 10], [0, 0, 0], [5, 10, 0]);
    mesh.triangle([5, 5, 10], [0, 0, 0], [10, 0, 0]);
    mesh.triangle([5, 5, 10], [10, 0, 0], [5, 10, 0]);
    return mesh;
}

// create two cubes in one mesh
function createTwoCubes() {
    // create a cube using coordinates
    var mesh = new Mesh3D();
    mesh.quad([0, 0, 0], [0, 10, 0], [10, 10, 0], [10, 0, 0]);
    mesh.quad([0, 0, 0], [10, 0, 0], [10, 0, 10], [0, 0, 10]);
    mesh.quad([10, 0, 0], [10, 10, 0], [10, 10, 10], [10, 0, 10]);
    mesh.quad([0, 0, 0], [0, 0, 10], [0, 10, 10], [0, 10, 0]);
    mesh.quad([0, 10, 0], [0, 10, 10], [10, 10, 10], [10, 10, 0]);
    mesh.quad([0, 0, 10], [10, 0, 10], [10, 10, 10], [0, 10, 10]);
    // another cube
    mesh.quad([20, 20, 20], [20, 30, 20], [30, 30, 20], [30, 20, 20]);
    mesh.quad([20, 20, 20], [30, 20, 20], [30, 20, 30], [20, 20, 30]);
    mesh.quad([30, 20, 20], [30, 30, 20], [30, 30, 30], [30, 20, 30]);
    mesh.quad([20, 20, 20], [20, 20, 30], [20, 30, 30], [20, 30, 20]);
    mesh.quad([20, 30, 20], [20, 30, 30], [30, 30, 30], [30, 30, 20]);
    mesh.quad([20, 20, 30], [30, 20, 30], [30, 30, 30], [20, 30, 30]);
    // return both of the cubes in one mesh
    return mesh;
}

// create T
function createT() {
    var mesh = new Mesh3D();
    mesh.triangle([-25.000000, 10.000000, 0.000000], [-5.000000, 10.000000, 0.000000], [-25.000000, 10.000000, 5.000000]);
    mesh.triangle([-25.000000, 10.000000, 5.000000], [-5.000000, 10.000000, 0.000000], [-5.000000, 10.000000, 5.000000]);
    mesh.triangle([-25.000000, 15.000000, 0.000000], [-25.000000, 10.000000, 0.000000], [-25.000000, 15.000000, 5.000000]);
    mesh.triangle([-25.000000, 15.000000, 5.000000], [-25.000000, 10.000000, 0.000000], [-25.000000, 10.000000, 5.000000]);
    mesh.triangle([-5.000000, 15.000000, 0.000000], [-25.000000, 15.000000, 0.000000], [-5.000000, 15.000000, 5.000000]);
    mesh.triangle([-5.000000, 15.000000, 5.000000], [-25.000000, 15.000000, 0.000000], [-25.000000, 15.000000, 5.000000]);
    mesh.triangle([-5.000000, 25.000000, 0.000000], [-5.000000, 15.000000, 0.000000], [-5.000000, 25.000000, 5.000000]);
    mesh.triangle([-5.000000, 25.000000, 5.000000], [-5.000000, 15.000000, 0.000000], [-5.000000, 15.000000, 5.000000]);
    mesh.triangle([0.000000, 25.000000, 0.000000], [-5.000000, 25.000000, 0.000000], [0.000000, 25.000000, 5.000000]);
    mesh.triangle([0.000000, 25.000000, 5.000000], [-5.000000, 25.000000, 0.000000], [-5.000000, 25.000000, 5.000000]);
    mesh.triangle([0.000000, 0.000000, 0.000000], [0.000000, 25.000000, 0.000000], [0.000000, 0.000000, 5.000000]);
    mesh.triangle([0.000000, 0.000000, 5.000000], [0.000000, 25.000000, 0.000000], [0.000000, 25.000000, 5.000000]);
    mesh.triangle([-5.000000, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000], [-5.000000, 0.000000, 5.000000]);
    mesh.triangle([-5.000000, 0.000000, 5.000000], [0.000000, 0.000000, 0.000000], [0.000000, 0.000000, 5.000000]);
    mesh.triangle([-5.000000, 10.000000, 0.000000], [-5.000000, 0.000000, 0.000000], [-5.000000, 10.000000, 5.000000]);
    mesh.triangle([-5.000000, 10.000000, 5.000000], [-5.000000, 0.000000, 0.000000], [-5.000000, 0.000000, 5.000000]);
    mesh.triangle([-5.000000, 0.000000, 5.000000], [0.000000, 0.000000, 5.000000], [-5.000000, 10.000000, 5.000000]);
    mesh.triangle([-5.000000, 10.000000, 5.000000], [0.000000, 0.000000, 5.000000], [-5.000000, 15.000000, 5.000000]);
    mesh.triangle([-25.000000, 15.000000, 5.000000], [-5.000000, 10.000000, 5.000000], [-5.000000, 15.000000, 5.000000]);
    mesh.triangle([-25.000000, 15.000000, 5.000000], [-25.000000, 10.000000, 5.000000], [-5.000000, 10.000000, 5.000000]);
    mesh.triangle([0.000000, 0.000000, 5.000000], [0.000000, 25.000000, 5.000000], [-5.000000, 15.000000, 5.000000]);
    mesh.triangle([-5.000000, 15.000000, 5.000000], [0.000000, 25.000000, 5.000000], [-5.000000, 25.000000, 5.000000]);
    mesh.triangle([-5.000000, 0.000000, 0.000000], [-5.000000, 10.000000, 0.000000], [0.000000, 0.000000, 0.000000]);
    mesh.triangle([0.000000, 0.000000, 0.000000], [-5.000000, 10.000000, 0.000000], [-5.000000, 15.000000, 0.000000]);
    mesh.triangle([0.000000, 25.000000, 0.000000], [-5.000000, 15.000000, 0.000000], [-5.000000, 25.000000, 0.000000]);
    mesh.triangle([0.000000, 25.000000, 0.000000], [0.000000, 0.000000, 0.000000], [-5.000000, 15.000000, 0.000000]);
    mesh.triangle([-5.000000, 10.000000, 0.000000], [-25.000000, 10.000000, 0.000000], [-5.000000, 15.000000, 0.000000]);
    mesh.triangle([-5.000000, 15.000000, 0.000000], [-25.000000, 10.000000, 0.000000], [-25.000000, 15.000000, 0.000000]);
    return mesh;
}

// create a tree
function createTree() {
    var mesh = new Mesh3D();
    mesh.triangle([ -38.122000, -30.973000, 56.500000], [ -39.244000, -25.946000, 51.000000], [ -41.401000, -26.530000, 51.000000]);
    mesh.triangle([ -39.201000, -31.265000, 56.500000], [ -38.122000, -30.973000, 56.500000], [ -41.401000, -26.530000, 51.000000]);
    mesh.triangle([ -39.201000, -31.265000, 56.500000], [ -43.389000, -27.477000, 51.000000], [ -40.195000, -31.739000, 56.500000]);
    mesh.triangle([ -39.201000, -31.265000, 56.500000], [ -41.401000, -26.530000, 51.000000], [ -43.389000, -27.477000, 51.000000]);
    mesh.triangle([ -34.799000, -40.735000, 56.500000], [ -33.805000, -40.261000, 56.500000], [ -37.000000, -36.000000, 62.001000]);
    mesh.triangle([ -32.219000, -38.847000, 56.500000], [ -31.687000, -37.961000, 56.500000], [ -37.000000, -36.000000, 62.001000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -31.687000, -37.961000, 56.500000], [ -31.360000, -37.000000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -31.360000, -37.000000, 56.500000], [ -31.250000, -36.000000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -31.250000, -36.000000, 56.500000], [ -31.360000, -35.000000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -31.360000, -35.000000, 56.500000], [ -31.687000, -34.039000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -32.934000, -32.376000, 56.500000], [ -33.805000, -31.739000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -33.805000, -31.739000, 56.500000], [ -34.799000, -31.265000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -34.799000, -31.265000, 56.500000], [ -35.878000, -30.973000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -35.878000, -30.973000, 56.500000], [ -37.000000, -30.875000, 56.500000]);
    mesh.triangle([ -31.250000, -36.000000, 56.500000], [ -25.720000, -38.000000, 51.000000], [ -25.500000, -36.000000, 51.000000]);
    mesh.triangle([ -31.360000, -37.000000, 56.500000], [ -25.720000, -38.000000, 51.000000], [ -31.250000, -36.000000, 56.500000]);
    mesh.triangle([ -31.250000, -36.000000, 56.500000], [ -25.500000, -36.000000, 51.000000], [ -25.720000, -34.000000, 51.000000]);
    mesh.triangle([ -25.720000, -34.000000, 51.000000], [ -31.360000, -35.000000, 56.500000], [ -31.250000, -36.000000, 56.500000]);
    mesh.triangle([ -31.360000, -35.000000, 56.500000], [ -25.720000, -34.000000, 51.000000], [ -26.375000, -32.077000, 51.000000]);
    mesh.triangle([ -31.687000, -34.039000, 56.500000], [ -31.360000, -35.000000, 56.500000], [ -26.375000, -32.077000, 51.000000]);
    mesh.triangle([ -32.934000, -32.376000, 56.500000], [ -32.219000, -33.153000, 56.500000], [ -28.868000, -28.752000, 51.000000]);
    mesh.triangle([ -32.123000, -11.480000, 23.999000], [ -35.086000, -32.304000, 23.999000], [ -37.000000, -31.999000, 23.999000]);
    mesh.triangle([ -37.000000, -31.999000, 23.999000], [ -37.000000, -11.000000, 23.999000], [ -32.123000, -11.480000, 23.999000]);
    mesh.triangle([ -41.877000, -11.480000, 23.999000], [ -37.000000, -31.999000, 23.999000], [ -38.914000, -32.304000, 23.999000]);
    mesh.triangle([ -33.173000, -27.685000, 48.000000], [ -34.321000, -30.179300, 51.000000], [ -33.110600, -30.761700, 51.000000]);
    mesh.triangle([ -32.050100, -31.545000, 51.000000], [ -31.444000, -28.517000, 48.000000], [ -33.110600, -30.761700, 51.000000]);
    mesh.triangle([ -38.365800, -29.820800, 51.000000], [ -37.000000, -29.699700, 51.000000], [ -37.000000, -27.000000, 48.000000]);
    mesh.triangle([ -38.365800, -29.820800, 51.000000], [ -38.951000, -27.173000, 48.000000], [ -39.679000, -30.179300, 51.000000]);
    mesh.triangle([ -33.110600, -30.761700, 51.000000], [ -31.444000, -28.517000, 48.000000], [ -33.173000, -27.685000, 48.000000]);
    mesh.triangle([ -34.321000, -30.179300, 51.000000], [ -33.173000, -27.685000, 48.000000], [ -35.049000, -27.173000, 48.000000]);
    mesh.triangle([ -35.049000, -27.173000, 48.000000], [ -35.634200, -29.820800, 51.000000], [ -34.321000, -30.179300, 51.000000]);
    mesh.triangle([ -37.000000, -27.000000, 48.000000], [ -37.000000, -29.699700, 51.000000], [ -35.634200, -29.820800, 51.000000]);
    mesh.triangle([ -35.634200, -29.820800, 51.000000], [ -35.049000, -27.173000, 48.000000], [ -37.000000, -27.000000, 48.000000]);
    mesh.triangle([ -37.000000, -27.000000, 48.000000], [ -38.951000, -27.173000, 48.000000], [ -38.365800, -29.820800, 51.000000]);
    mesh.triangle([ -40.827000, -27.685000, 48.000000], [ -39.679000, -30.179300, 51.000000], [ -38.951000, -27.173000, 48.000000]);
    mesh.triangle([ -40.889400, -30.761700, 51.000000], [ -40.827000, -27.685000, 48.000000], [ -42.556000, -28.517000, 48.000000]);
    mesh.triangle([ -39.679000, -30.179300, 51.000000], [ -40.827000, -27.685000, 48.000000], [ -40.889400, -30.761700, 51.000000]);
    mesh.triangle([ -32.832700, -29.763200, 38.000000], [ -30.055000, -25.606000, 34.000000], [ -32.216000, -24.451000, 34.000000]);
    mesh.triangle([ -32.123000, -11.480000, 23.999000], [ -34.561000, -23.740000, 34.000000], [ -32.216000, -24.451000, 34.000000]);
    mesh.triangle([ -34.561000, -23.740000, 34.000000], [ -32.123000, -11.480000, 23.999000], [ -37.000000, -11.000000, 23.999000]);
    mesh.triangle([ -32.832700, -29.763200, 38.000000], [ -29.346000, -19.370000, 38.000000], [ -25.888000, -21.033000, 38.000000]);
    mesh.triangle([ -35.049000, -27.173000, 48.000000], [ -33.173000, -27.685000, 48.000000], [ -33.098000, -18.345000, 38.000000]);
    mesh.triangle([ -35.049000, -27.173000, 48.000000], [ -33.098000, -18.345000, 38.000000], [ -37.000000, -17.999000, 38.000000]);
    mesh.triangle([ -37.000000, -17.999000, 38.000000], [ -37.000000, -27.000000, 48.000000], [ -35.049000, -27.173000, 48.000000]);
    mesh.triangle([ -37.000000, -17.999000, 38.000000], [ -38.951000, -27.173000, 48.000000], [ -37.000000, -27.000000, 48.000000]);
    mesh.triangle([ -38.951000, -27.173000, 48.000000], [ -37.000000, -17.999000, 38.000000], [ -40.902000, -18.345000, 38.000000]);
    mesh.triangle([ -33.098000, -18.345000, 38.000000], [ -34.129400, -29.070100, 38.000000], [ -35.536500, -28.643500, 38.000000]);
    mesh.triangle([ -34.129400, -29.070100, 38.000000], [ -33.098000, -18.345000, 38.000000], [ -29.346000, -19.370000, 38.000000]);
    mesh.triangle([ -37.000000, -17.999000, 38.000000], [ -33.098000, -18.345000, 38.000000], [ -35.536500, -28.643500, 38.000000]);
    mesh.triangle([ -35.536500, -28.643500, 38.000000], [ -37.000000, -28.499500, 38.000000], [ -37.000000, -17.999000, 38.000000]);
    mesh.triangle([ -34.129400, -29.070100, 38.000000], [ -32.216000, -24.451000, 34.000000], [ -34.561000, -23.740000, 34.000000]);
    mesh.triangle([ -34.561000, -23.740000, 34.000000], [ -35.536500, -28.643500, 38.000000], [ -34.129400, -29.070100, 38.000000]);
    mesh.triangle([ -37.000000, -28.499500, 38.000000], [ -38.463500, -28.643500, 38.000000], [ -37.000000, -17.999000, 38.000000]);
    mesh.triangle([ -38.463500, -28.643500, 38.000000], [ -39.870600, -29.070100, 38.000000], [ -40.902000, -18.345000, 38.000000]);
    mesh.triangle([ -34.561000, -23.740000, 34.000000], [ -37.000000, -11.000000, 23.999000], [ -37.000000, -23.500000, 34.000000]);
    mesh.triangle([ -37.000000, -23.500000, 34.000000], [ -37.000000, -28.499500, 38.000000], [ -35.536500, -28.643500, 38.000000]);
    mesh.triangle([ -35.536500, -28.643500, 38.000000], [ -34.561000, -23.740000, 34.000000], [ -37.000000, -23.500000, 34.000000]);
    mesh.triangle([ -38.463500, -28.643500, 38.000000], [ -37.000000, -23.500000, 34.000000], [ -39.439000, -23.740000, 34.000000]);
    mesh.triangle([ -37.000000, -28.499500, 38.000000], [ -37.000000, -23.500000, 34.000000], [ -38.463500, -28.643500, 38.000000]);
    mesh.triangle([ -37.000000, -23.500000, 34.000000], [ -37.000000, -11.000000, 23.999000], [ -41.877000, -11.480000, 23.999000]);
    mesh.triangle([ -37.000000, -23.500000, 34.000000], [ -41.877000, -11.480000, 23.999000], [ -39.439000, -23.740000, 34.000000]);
    mesh.triangle([ -39.870600, -29.070100, 38.000000], [ -39.439000, -23.740000, 34.000000], [ -41.784000, -24.451000, 34.000000]);
    mesh.triangle([ -38.463500, -28.643500, 38.000000], [ -39.439000, -23.740000, 34.000000], [ -39.870600, -29.070100, 38.000000]);
    mesh.triangle([ -39.870600, -29.070100, 38.000000], [ -41.784000, -24.451000, 34.000000], [ -41.167300, -29.763200, 38.000000]);
    mesh.triangle([ -30.611000, -27.477000, 51.000000], [ -32.050100, -31.545000, 51.000000], [ -33.110600, -30.761700, 51.000000]);
    mesh.triangle([ -30.532400, -38.410900, 51.000000], [ -31.179300, -39.500100, 51.000000], [ -28.685000, -41.000000, 48.000000]);
    mesh.triangle([ -30.134100, -37.229300, 51.000000], [ -27.761000, -39.444000, 48.000000], [ -27.192000, -37.756000, 48.000000]);
    mesh.triangle([ -30.532400, -38.410900, 51.000000], [ -27.761000, -39.444000, 48.000000], [ -30.134100, -37.229300, 51.000000]);
    mesh.triangle([ -29.999700, -36.000000, 51.000000], [ -27.192000, -37.756000, 48.000000], [ -27.000000, -36.000000, 48.000000]);
    mesh.triangle([ -30.134100, -37.229300, 51.000000], [ -27.192000, -37.756000, 48.000000], [ -29.999700, -36.000000, 51.000000]);
    mesh.triangle([ -27.192000, -34.244000, 48.000000], [ -30.134100, -34.770700, 51.000000], [ -29.999700, -36.000000, 51.000000]);
    mesh.triangle([ -29.999700, -36.000000, 51.000000], [ -27.000000, -36.000000, 48.000000], [ -27.192000, -34.244000, 48.000000]);
    mesh.triangle([ -30.134100, -34.770700, 51.000000], [ -27.192000, -34.244000, 48.000000], [ -27.761000, -32.556000, 48.000000]);
    mesh.triangle([ -18.522000, -29.112000, 38.000000], [ -29.643500, -34.536500, 38.000000], [ -30.070100, -33.129400, 38.000000]);
    mesh.triangle([ -30.070100, -33.129400, 38.000000], [ -20.370000, -25.999000, 38.000000], [ -18.522000, -29.112000, 38.000000]);
    mesh.triangle([ -20.370000, -25.999000, 38.000000], [ -30.070100, -33.129400, 38.000000], [ -30.763200, -31.832700, 38.000000]);
    mesh.triangle([ -30.763200, -31.832700, 38.000000], [ -22.858000, -23.272000, 38.000000], [ -20.370000, -25.999000, 38.000000]);
    mesh.triangle([ -27.761000, -32.556000, 48.000000], [ -18.522000, -29.112000, 38.000000], [ -20.370000, -25.999000, 38.000000]);
    mesh.triangle([ -28.685000, -31.000000, 48.000000], [ -20.370000, -25.999000, 38.000000], [ -22.858000, -23.272000, 38.000000]);
    mesh.triangle([ -29.929000, -29.636000, 48.000000], [ -28.685000, -31.000000, 48.000000], [ -22.858000, -23.272000, 38.000000]);
    mesh.triangle([ -29.929000, -29.636000, 48.000000], [ -22.858000, -23.272000, 38.000000], [ -25.888000, -21.033000, 38.000000]);
    mesh.triangle([ -31.444000, -28.517000, 48.000000], [ -25.888000, -21.033000, 38.000000], [ -29.346000, -19.370000, 38.000000]);
    mesh.triangle([ -33.173000, -27.685000, 48.000000], [ -31.444000, -28.517000, 48.000000], [ -29.346000, -19.370000, 38.000000]);
    mesh.triangle([ -33.173000, -27.685000, 48.000000], [ -29.346000, -19.370000, 38.000000], [ -33.098000, -18.345000, 38.000000]);
    mesh.triangle([ -31.696200, -30.696200, 38.000000], [ -25.888000, -21.033000, 38.000000], [ -22.858000, -23.272000, 38.000000]);
    mesh.triangle([ -25.888000, -21.033000, 38.000000], [ -31.696200, -30.696200, 38.000000], [ -32.832700, -29.763200, 38.000000]);
    mesh.triangle([ -26.606000, -29.055000, 34.000000], [ -30.763200, -31.832700, 38.000000], [ -25.451000, -31.216000, 34.000000]);
    mesh.triangle([ -26.606000, -29.055000, 34.000000], [ -25.451000, -31.216000, 34.000000], [ -16.213000, -22.110000, 23.999000]);
    mesh.triangle([ -25.451000, -31.216000, 34.000000], [ -13.903000, -26.433000, 23.999000], [ -16.213000, -22.110000, 23.999000]);
    mesh.triangle([ -29.346000, -19.370000, 38.000000], [ -32.832700, -29.763200, 38.000000], [ -34.129400, -29.070100, 38.000000]);
    mesh.triangle([ -28.161000, -27.161000, 34.000000], [ -26.606000, -29.055000, 34.000000], [ -19.322000, -18.322000, 23.999000]);
    mesh.triangle([ -28.161000, -27.161000, 34.000000], [ -31.696200, -30.696200, 38.000000], [ -30.763200, -31.832700, 38.000000]);
    mesh.triangle([ -30.763200, -31.832700, 38.000000], [ -26.606000, -29.055000, 34.000000], [ -28.161000, -27.161000, 34.000000]);
    mesh.triangle([ -26.606000, -29.055000, 34.000000], [ -16.213000, -22.110000, 23.999000], [ -19.322000, -18.322000, 23.999000]);
    mesh.triangle([ -32.832700, -29.763200, 38.000000], [ -28.161000, -27.161000, 34.000000], [ -30.055000, -25.606000, 34.000000]);
    mesh.triangle([ -31.696200, -30.696200, 38.000000], [ -28.161000, -27.161000, 34.000000], [ -32.832700, -29.763200, 38.000000]);
    mesh.triangle([ -28.161000, -27.161000, 34.000000], [ -19.322000, -18.322000, 23.999000], [ -23.110000, -15.213000, 23.999000]);
    mesh.triangle([ -30.055000, -25.606000, 34.000000], [ -28.161000, -27.161000, 34.000000], [ -23.110000, -15.213000, 23.999000]);
    mesh.triangle([ -32.216000, -24.451000, 34.000000], [ -34.129400, -29.070100, 38.000000], [ -32.832700, -29.763200, 38.000000]);
    mesh.triangle([ -30.055000, -25.606000, 34.000000], [ -23.110000, -15.213000, 23.999000], [ -27.433000, -12.903000, 23.999000]);
    mesh.triangle([ -32.216000, -24.451000, 34.000000], [ -30.055000, -25.606000, 34.000000], [ -27.433000, -12.903000, 23.999000]);
    mesh.triangle([ -32.216000, -24.451000, 34.000000], [ -27.433000, -12.903000, 23.999000], [ -32.123000, -11.480000, 23.999000]);
    mesh.triangle([ -17.384000, -39.512000, 38.000000], [ -17.000000, -36.000000, 38.000000], [ -27.000000, -36.000000, 48.000000]);
    mesh.triangle([ -27.000000, -36.000000, 48.000000], [ -27.192000, -37.756000, 48.000000], [ -17.384000, -39.512000, 38.000000]);
    mesh.triangle([ -27.000000, -36.000000, 48.000000], [ -17.000000, -36.000000, 38.000000], [ -17.384000, -32.488000, 38.000000]);
    mesh.triangle([ -17.384000, -32.488000, 38.000000], [ -29.499500, -36.000000, 38.000000], [ -29.643500, -34.536500, 38.000000]);
    mesh.triangle([ -17.384000, -32.488000, 38.000000], [ -27.192000, -34.244000, 48.000000], [ -27.000000, -36.000000, 48.000000]);
    mesh.triangle([ -27.192000, -34.244000, 48.000000], [ -17.384000, -32.488000, 38.000000], [ -18.522000, -29.112000, 38.000000]);
    mesh.triangle([ -27.192000, -34.244000, 48.000000], [ -18.522000, -29.112000, 38.000000], [ -27.761000, -32.556000, 48.000000]);
    mesh.triangle([ -17.000000, -36.000000, 38.000000], [ -17.384000, -39.512000, 38.000000], [ -29.499500, -36.000000, 38.000000]);
    mesh.triangle([ -29.499500, -36.000000, 38.000000], [ -17.384000, -32.488000, 38.000000], [ -17.000000, -36.000000, 38.000000]);
    mesh.triangle([ -29.643500, -37.463500, 38.000000], [ -29.499500, -36.000000, 38.000000], [ -17.384000, -39.512000, 38.000000]);
    mesh.triangle([ -29.643500, -37.463500, 38.000000], [ -17.384000, -39.512000, 38.000000], [ -18.522000, -42.888000, 38.000000]);
    mesh.triangle([ -29.643500, -34.536500, 38.000000], [ -18.522000, -29.112000, 38.000000], [ -17.384000, -32.488000, 38.000000]);
    mesh.triangle([ -29.643500, -37.463500, 38.000000], [ -30.070100, -38.870600, 38.000000], [ -24.740000, -38.439000, 34.000000]);
    mesh.triangle([ -24.500000, -36.000000, 34.000000], [ -24.740000, -38.439000, 34.000000], [ -12.000000, -36.000000, 23.999000]);
    mesh.triangle([ -24.500000, -36.000000, 34.000000], [ -29.499500, -36.000000, 38.000000], [ -29.643500, -37.463500, 38.000000]);
    mesh.triangle([ -29.643500, -37.463500, 38.000000], [ -24.740000, -38.439000, 34.000000], [ -24.500000, -36.000000, 34.000000]);
    mesh.triangle([ -12.000000, -36.000000, 23.999000], [ -24.740000, -38.439000, 34.000000], [ -12.480000, -40.877000, 23.999000]);
    mesh.triangle([ -29.643500, -34.536500, 38.000000], [ -24.500000, -36.000000, 34.000000], [ -24.740000, -33.561000, 34.000000]);
    mesh.triangle([ -29.499500, -36.000000, 38.000000], [ -24.500000, -36.000000, 34.000000], [ -29.643500, -34.536500, 38.000000]);
    mesh.triangle([ -12.000000, -36.000000, 23.999000], [ -12.480000, -31.123000, 23.999000], [ -24.500000, -36.000000, 34.000000]);
    mesh.triangle([ -12.480000, -31.123000, 23.999000], [ -24.740000, -33.561000, 34.000000], [ -24.500000, -36.000000, 34.000000]);
    mesh.triangle([ -22.858000, -23.272000, 38.000000], [ -30.763200, -31.832700, 38.000000], [ -31.696200, -30.696200, 38.000000]);
    mesh.triangle([ -30.070100, -33.129400, 38.000000], [ -29.643500, -34.536500, 38.000000], [ -24.740000, -33.561000, 34.000000]);
    mesh.triangle([ -24.740000, -33.561000, 34.000000], [ -25.451000, -31.216000, 34.000000], [ -30.070100, -33.129400, 38.000000]);
    mesh.triangle([ -13.903000, -26.433000, 23.999000], [ -24.740000, -33.561000, 34.000000], [ -12.480000, -31.123000, 23.999000]);
    mesh.triangle([ -25.451000, -31.216000, 34.000000], [ -24.740000, -33.561000, 34.000000], [ -13.903000, -26.433000, 23.999000]);
    mesh.triangle([ -30.070100, -33.129400, 38.000000], [ -25.451000, -31.216000, 34.000000], [ -30.763200, -31.832700, 38.000000]);
    mesh.triangle([ -27.438000, -30.305000, 51.000000], [ -26.375000, -32.077000, 51.000000], [ -30.532400, -33.589100, 51.000000]);
    mesh.triangle([ -31.179300, -32.499900, 51.000000], [ -28.868000, -28.752000, 51.000000], [ -27.438000, -30.305000, 51.000000]);
    mesh.triangle([ -32.599000, -26.530000, 51.000000], [ -30.611000, -27.477000, 51.000000], [ -33.110600, -30.761700, 51.000000]);
    mesh.triangle([ -28.868000, -28.752000, 51.000000], [ -31.179300, -32.499900, 51.000000], [ -32.050100, -31.545000, 51.000000]);
    mesh.triangle([ -27.192000, -37.756000, 48.000000], [ -18.522000, -42.888000, 38.000000], [ -17.384000, -39.512000, 38.000000]);
    mesh.triangle([ -32.832700, -42.236800, 38.000000], [ -30.055000, -46.394000, 34.000000], [ -28.161000, -44.839000, 34.000000]);
    mesh.triangle([ -30.070100, -38.870600, 38.000000], [ -18.522000, -42.888000, 38.000000], [ -20.370000, -46.001000, 38.000000]);
    mesh.triangle([ -18.522000, -42.888000, 38.000000], [ -30.070100, -38.870600, 38.000000], [ -29.643500, -37.463500, 38.000000]);
    mesh.triangle([ -30.763200, -40.167300, 38.000000], [ -28.161000, -44.839000, 34.000000], [ -26.606000, -42.945000, 34.000000]);
    mesh.triangle([ -31.696200, -41.303800, 38.000000], [ -28.161000, -44.839000, 34.000000], [ -30.763200, -40.167300, 38.000000]);
    mesh.triangle([ -30.070100, -38.870600, 38.000000], [ -30.763200, -40.167300, 38.000000], [ -25.451000, -40.784000, 34.000000]);
    mesh.triangle([ -30.763200, -40.167300, 38.000000], [ -26.606000, -42.945000, 34.000000], [ -25.451000, -40.784000, 34.000000]);
    mesh.triangle([ -25.451000, -40.784000, 34.000000], [ -26.606000, -42.945000, 34.000000], [ -13.903000, -45.567000, 23.999000]);
    mesh.triangle([ -30.070100, -38.870600, 38.000000], [ -25.451000, -40.784000, 34.000000], [ -24.740000, -38.439000, 34.000000]);
    mesh.triangle([ -24.740000, -38.439000, 34.000000], [ -25.451000, -40.784000, 34.000000], [ -12.480000, -40.877000, 23.999000]);
    mesh.triangle([ -12.480000, -40.877000, 23.999000], [ -25.451000, -40.784000, 34.000000], [ -13.903000, -45.567000, 23.999000]);
    mesh.triangle([ -41.167300, -42.236800, 38.000000], [ -39.870600, -42.929900, 38.000000], [ -44.654000, -52.630000, 38.000000]);
    mesh.triangle([ -41.167300, -42.236800, 38.000000], [ -43.945000, -46.394000, 34.000000], [ -41.784000, -47.549000, 34.000000]);
    mesh.triangle([ -39.439000, -48.260000, 34.000000], [ -38.463500, -43.356500, 38.000000], [ -39.870600, -42.929900, 38.000000]);
    mesh.triangle([ -39.870600, -42.929900, 38.000000], [ -41.784000, -47.549000, 34.000000], [ -39.439000, -48.260000, 34.000000]);
    mesh.triangle([ -38.463500, -43.356500, 38.000000], [ -39.439000, -48.260000, 34.000000], [ -37.000000, -48.500000, 34.000000]);
    mesh.triangle([ -34.129400, -42.929900, 38.000000], [ -29.346000, -52.630000, 38.000000], [ -33.098000, -53.655000, 38.000000]);
    mesh.triangle([ -34.129400, -42.929900, 38.000000], [ -35.536500, -43.356500, 38.000000], [ -34.561000, -48.260000, 34.000000]);
    mesh.triangle([ -32.832700, -42.236800, 38.000000], [ -31.696200, -41.303800, 38.000000], [ -25.888000, -50.967000, 38.000000]);
    mesh.triangle([ -29.346000, -52.630000, 38.000000], [ -34.129400, -42.929900, 38.000000], [ -32.832700, -42.236800, 38.000000]);
    mesh.triangle([ -34.129400, -42.929900, 38.000000], [ -32.216000, -47.549000, 34.000000], [ -32.832700, -42.236800, 38.000000]);
    mesh.triangle([ -28.868000, -43.248000, 51.000000], [ -30.611000, -44.523000, 51.000000], [ -32.050100, -40.455000, 51.000000]);
    mesh.triangle([ -37.000000, -46.250000, 51.000000], [ -37.000000, -42.300300, 51.000000], [ -35.634200, -42.179200, 51.000000]);
    mesh.triangle([ -39.244000, -46.054000, 51.000000], [ -39.679000, -41.820800, 51.000000], [ -38.365800, -42.179200, 51.000000]);
    mesh.triangle([ -39.679000, -41.820800, 51.000000], [ -39.244000, -46.054000, 51.000000], [ -41.401000, -45.470000, 51.000000]);
    mesh.triangle([ -38.365800, -42.179200, 51.000000], [ -37.000000, -46.250000, 51.000000], [ -39.244000, -46.054000, 51.000000]);
    mesh.triangle([ -37.000000, -46.250000, 51.000000], [ -38.365800, -42.179200, 51.000000], [ -37.000000, -42.300300, 51.000000]);
    mesh.triangle([ -35.634200, -42.179200, 51.000000], [ -34.756000, -46.054000, 51.000000], [ -37.000000, -46.250000, 51.000000]);
    mesh.triangle([ -34.321000, -41.820800, 51.000000], [ -32.599000, -45.470000, 51.000000], [ -34.756000, -46.054000, 51.000000]);
    mesh.triangle([ -34.756000, -46.054000, 51.000000], [ -35.634200, -42.179200, 51.000000], [ -34.321000, -41.820800, 51.000000]);
    mesh.triangle([ -33.110600, -41.238300, 51.000000], [ -32.050100, -40.455000, 51.000000], [ -30.611000, -44.523000, 51.000000]);
    mesh.triangle([ -32.599000, -45.470000, 51.000000], [ -34.321000, -41.820800, 51.000000], [ -33.110600, -41.238300, 51.000000]);
    mesh.triangle([ -30.611000, -44.523000, 51.000000], [ -32.599000, -45.470000, 51.000000], [ -33.110600, -41.238300, 51.000000]);
    mesh.triangle([ -41.401000, -45.470000, 51.000000], [ -40.889400, -41.238300, 51.000000], [ -39.679000, -41.820800, 51.000000]);
    mesh.triangle([ -40.889400, -41.238300, 51.000000], [ -41.401000, -45.470000, 51.000000], [ -43.389000, -44.523000, 51.000000]);
    mesh.triangle([ -28.868000, -43.248000, 51.000000], [ -27.438000, -41.695000, 51.000000], [ -32.934000, -39.624000, 56.500000]);
    mesh.triangle([ -39.201000, -40.735000, 56.500000], [ -37.000000, -36.000000, 62.001000], [ -40.195000, -40.261000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -39.201000, -40.735000, 56.500000], [ -38.122000, -41.027000, 56.500000]);
    mesh.triangle([ -39.244000, -46.054000, 51.000000], [ -38.122000, -41.027000, 56.500000], [ -39.201000, -40.735000, 56.500000]);
    mesh.triangle([ -33.098000, -53.655000, 38.000000], [ -35.536500, -43.356500, 38.000000], [ -34.129400, -42.929900, 38.000000]);
    mesh.triangle([ -30.055000, -46.394000, 34.000000], [ -32.832700, -42.236800, 38.000000], [ -32.216000, -47.549000, 34.000000]);
    mesh.triangle([ -28.161000, -44.839000, 34.000000], [ -31.696200, -41.303800, 38.000000], [ -32.832700, -42.236800, 38.000000]);
    mesh.triangle([ -16.213000, -49.890000, 23.999000], [ -13.903000, -45.567000, 23.999000], [ -26.606000, -42.945000, 34.000000]);
    mesh.triangle([ -22.858000, -48.728000, 38.000000], [ -25.888000, -50.967000, 38.000000], [ -31.696200, -41.303800, 38.000000]);
    mesh.triangle([ -25.888000, -50.967000, 38.000000], [ -29.346000, -52.630000, 38.000000], [ -32.832700, -42.236800, 38.000000]);
    mesh.triangle([ -25.888000, -50.967000, 38.000000], [ -22.858000, -48.728000, 38.000000], [ -31.444000, -43.483000, 48.000000]);
    mesh.triangle([ -30.055000, -46.394000, 34.000000], [ -32.216000, -47.549000, 34.000000], [ -23.110000, -56.787000, 23.999000]);
    mesh.triangle([ -23.110000, -56.787000, 23.999000], [ -32.216000, -47.549000, 34.000000], [ -27.433000, -59.097000, 23.999000]);
    mesh.triangle([ -19.322000, -53.678000, 23.999000], [ -28.161000, -44.839000, 34.000000], [ -30.055000, -46.394000, 34.000000]);
    mesh.triangle([ -23.110000, -56.787000, 23.999000], [ -19.322000, -53.678000, 23.999000], [ -30.055000, -46.394000, 34.000000]);
    mesh.triangle([ -16.213000, -49.890000, 23.999000], [ -28.161000, -44.839000, 34.000000], [ -19.322000, -53.678000, 23.999000]);
    mesh.triangle([ -26.606000, -42.945000, 34.000000], [ -28.161000, -44.839000, 34.000000], [ -16.213000, -49.890000, 23.999000]);
    mesh.triangle([ -35.536500, -43.356500, 38.000000], [ -33.098000, -53.655000, 38.000000], [ -37.000000, -54.001000, 38.000000]);
    mesh.triangle([ -38.463500, -43.356500, 38.000000], [ -37.000000, -54.001000, 38.000000], [ -40.902000, -53.655000, 38.000000]);
    mesh.triangle([ -37.000000, -54.001000, 38.000000], [ -37.000000, -43.500500, 38.000000], [ -35.536500, -43.356500, 38.000000]);
    mesh.triangle([ -37.000000, -48.500000, 34.000000], [ -37.000000, -43.500500, 38.000000], [ -38.463500, -43.356500, 38.000000]);
    mesh.triangle([ -35.536500, -43.356500, 38.000000], [ -37.000000, -48.500000, 34.000000], [ -34.561000, -48.260000, 34.000000]);
    mesh.triangle([ -37.000000, -43.500500, 38.000000], [ -37.000000, -48.500000, 34.000000], [ -35.536500, -43.356500, 38.000000]);
    mesh.triangle([ -34.561000, -48.260000, 34.000000], [ -32.216000, -47.549000, 34.000000], [ -34.129400, -42.929900, 38.000000]);
    mesh.triangle([ -32.216000, -47.549000, 34.000000], [ -34.561000, -48.260000, 34.000000], [ -27.433000, -59.097000, 23.999000]);
    mesh.triangle([ -41.784000, -47.549000, 34.000000], [ -41.877000, -60.520000, 23.999000], [ -39.439000, -48.260000, 34.000000]);
    mesh.triangle([ -37.000000, -54.001000, 38.000000], [ -38.463500, -43.356500, 38.000000], [ -37.000000, -43.500500, 38.000000]);
    mesh.triangle([ -40.902000, -53.655000, 38.000000], [ -39.870600, -42.929900, 38.000000], [ -38.463500, -43.356500, 38.000000]);
    mesh.triangle([ -37.000000, -54.001000, 38.000000], [ -38.951000, -44.827000, 48.000000], [ -40.902000, -53.655000, 38.000000]);
    mesh.triangle([ -33.098000, -53.655000, 38.000000], [ -29.346000, -52.630000, 38.000000], [ -35.049000, -44.827000, 48.000000]);
    mesh.triangle([ -37.000000, -48.500000, 34.000000], [ -39.439000, -48.260000, 34.000000], [ -37.000000, -61.001000, 23.999000]);
    mesh.triangle([ -39.439000, -48.260000, 34.000000], [ -41.877000, -60.520000, 23.999000], [ -37.000000, -61.001000, 23.999000]);
    mesh.triangle([ -37.000000, -48.500000, 34.000000], [ -37.000000, -61.001000, 23.999000], [ -32.123000, -60.520000, 23.999000]);
    mesh.triangle([ -37.000000, -48.500000, 34.000000], [ -32.123000, -60.520000, 23.999000], [ -34.561000, -48.260000, 34.000000]);
    mesh.triangle([ -27.433000, -59.097000, 23.999000], [ -34.561000, -48.260000, 34.000000], [ -32.123000, -60.520000, 23.999000]);
    mesh.triangle([ -29.929000, -42.364000, 48.000000], [ -32.050100, -40.455000, 51.000000], [ -31.444000, -43.483000, 48.000000]);
    mesh.triangle([ -28.685000, -41.000000, 48.000000], [ -29.929000, -42.364000, 48.000000], [ -20.370000, -46.001000, 38.000000]);
    mesh.triangle([ -31.179300, -39.500100, 51.000000], [ -29.929000, -42.364000, 48.000000], [ -28.685000, -41.000000, 48.000000]);
    mesh.triangle([ -32.050100, -40.455000, 51.000000], [ -29.929000, -42.364000, 48.000000], [ -31.179300, -39.500100, 51.000000]);
    mesh.triangle([ -18.522000, -42.888000, 38.000000], [ -28.685000, -41.000000, 48.000000], [ -20.370000, -46.001000, 38.000000]);
    mesh.triangle([ -27.761000, -39.444000, 48.000000], [ -28.685000, -41.000000, 48.000000], [ -18.522000, -42.888000, 38.000000]);
    mesh.triangle([ -48.112000, -21.033000, 38.000000], [ -41.167300, -29.763200, 38.000000], [ -42.303800, -30.696200, 38.000000]);
    mesh.triangle([ -43.236800, -31.832700, 38.000000], [ -53.630000, -25.999000, 38.000000], [ -51.142000, -23.272000, 38.000000]);
    mesh.triangle([ -46.567000, -12.903000, 23.999000], [ -39.439000, -23.740000, 34.000000], [ -41.877000, -11.480000, 23.999000]);
    mesh.triangle([ -39.439000, -23.740000, 34.000000], [ -46.567000, -12.903000, 23.999000], [ -41.784000, -24.451000, 34.000000]);
    mesh.triangle([ -41.167300, -29.763200, 38.000000], [ -41.784000, -24.451000, 34.000000], [ -43.945000, -25.606000, 34.000000]);
    mesh.triangle([ -43.945000, -25.606000, 34.000000], [ -41.784000, -24.451000, 34.000000], [ -50.890000, -15.213000, 23.999000]);
    mesh.triangle([ -41.784000, -24.451000, 34.000000], [ -46.567000, -12.903000, 23.999000], [ -50.890000, -15.213000, 23.999000]);
    mesh.triangle([ -53.630000, -25.999000, 38.000000], [ -43.236800, -31.832700, 38.000000], [ -43.929900, -33.129400, 38.000000]);
    mesh.triangle([ -43.929900, -33.129400, 38.000000], [ -55.478000, -29.112000, 38.000000], [ -53.630000, -25.999000, 38.000000]);
    mesh.triangle([ -41.167300, -29.763200, 38.000000], [ -43.945000, -25.606000, 34.000000], [ -45.839000, -27.161000, 34.000000]);
    mesh.triangle([ -45.839000, -27.161000, 34.000000], [ -42.303800, -30.696200, 38.000000], [ -41.167300, -29.763200, 38.000000]);
    mesh.triangle([ -43.236800, -31.832700, 38.000000], [ -45.839000, -27.161000, 34.000000], [ -47.394000, -29.055000, 34.000000]);
    mesh.triangle([ -42.303800, -30.696200, 38.000000], [ -45.839000, -27.161000, 34.000000], [ -43.236800, -31.832700, 38.000000]);
    mesh.triangle([ -43.236800, -31.832700, 38.000000], [ -47.394000, -29.055000, 34.000000], [ -48.549000, -31.216000, 34.000000]);
    mesh.triangle([ -44.500500, -36.000000, 38.000000], [ -44.356500, -37.463500, 38.000000], [ -56.616000, -39.512000, 38.000000]);
    mesh.triangle([ -44.356500, -37.463500, 38.000000], [ -43.929900, -38.870600, 38.000000], [ -55.478000, -42.888000, 38.000000]);
    mesh.triangle([ -43.929900, -38.870600, 38.000000], [ -48.549000, -40.784000, 34.000000], [ -43.236800, -40.167300, 38.000000]);
    mesh.triangle([ -55.478000, -29.112000, 38.000000], [ -43.929900, -33.129400, 38.000000], [ -44.356500, -34.536500, 38.000000]);
    mesh.triangle([ -44.356500, -34.536500, 38.000000], [ -43.929900, -33.129400, 38.000000], [ -49.260000, -33.561000, 34.000000]);
    mesh.triangle([ -44.356500, -34.536500, 38.000000], [ -44.500500, -36.000000, 38.000000], [ -56.616000, -32.488000, 38.000000]);
    mesh.triangle([ -44.356500, -34.536500, 38.000000], [ -49.260000, -33.561000, 34.000000], [ -49.500000, -36.000000, 34.000000]);
    mesh.triangle([ -43.236800, -40.167300, 38.000000], [ -42.303800, -41.303800, 38.000000], [ -51.142000, -48.728000, 38.000000]);
    mesh.triangle([ -47.394000, -42.945000, 34.000000], [ -43.236800, -40.167300, 38.000000], [ -48.549000, -40.784000, 34.000000]);
    mesh.triangle([ -48.112000, -50.967000, 38.000000], [ -42.303800, -41.303800, 38.000000], [ -41.167300, -42.236800, 38.000000]);
    mesh.triangle([ -43.236800, -40.167300, 38.000000], [ -47.394000, -42.945000, 34.000000], [ -45.839000, -44.839000, 34.000000]);
    mesh.triangle([ -45.839000, -44.839000, 34.000000], [ -42.303800, -41.303800, 38.000000], [ -43.236800, -40.167300, 38.000000]);
    mesh.triangle([ -41.167300, -42.236800, 38.000000], [ -45.839000, -44.839000, 34.000000], [ -43.945000, -46.394000, 34.000000]);
    mesh.triangle([ -42.303800, -41.303800, 38.000000], [ -45.839000, -44.839000, 34.000000], [ -41.167300, -42.236800, 38.000000]);
    mesh.triangle([ -43.389000, -27.477000, 51.000000], [ -40.889400, -30.761700, 51.000000], [ -41.949900, -31.545000, 51.000000]);
    mesh.triangle([ -47.625000, -32.077000, 51.000000], [ -46.562000, -30.305000, 51.000000], [ -43.467600, -33.589100, 51.000000]);
    mesh.triangle([ -48.280000, -38.000000, 51.000000], [ -48.500000, -36.000000, 51.000000], [ -44.000300, -36.000000, 51.000000]);
    mesh.triangle([ -43.865900, -37.229300, 51.000000], [ -47.625000, -39.923000, 51.000000], [ -48.280000, -38.000000, 51.000000]);
    mesh.triangle([ -46.562000, -41.695000, 51.000000], [ -43.467600, -38.410900, 51.000000], [ -42.820800, -39.500100, 51.000000]);
    mesh.triangle([ -42.820800, -39.500100, 51.000000], [ -45.132000, -43.248000, 51.000000], [ -46.562000, -41.695000, 51.000000]);
    mesh.triangle([ -45.132000, -43.248000, 51.000000], [ -42.820800, -39.500100, 51.000000], [ -41.949900, -40.455000, 51.000000]);
    mesh.triangle([ -48.280000, -34.000000, 51.000000], [ -47.625000, -32.077000, 51.000000], [ -43.865900, -34.770700, 51.000000]);
    mesh.triangle([ -48.280000, -34.000000, 51.000000], [ -43.865900, -34.770700, 51.000000], [ -44.000300, -36.000000, 51.000000]);
    mesh.triangle([ -43.467600, -33.589100, 51.000000], [ -43.865900, -34.770700, 51.000000], [ -47.625000, -32.077000, 51.000000]);
    mesh.triangle([ -44.000300, -36.000000, 51.000000], [ -48.500000, -36.000000, 51.000000], [ -48.280000, -34.000000, 51.000000]);
    mesh.triangle([ -44.000300, -36.000000, 51.000000], [ -43.865900, -37.229300, 51.000000], [ -48.280000, -38.000000, 51.000000]);
    mesh.triangle([ -43.467600, -38.410900, 51.000000], [ -46.562000, -41.695000, 51.000000], [ -47.625000, -39.923000, 51.000000]);
    mesh.triangle([ -47.625000, -39.923000, 51.000000], [ -43.865900, -37.229300, 51.000000], [ -43.467600, -38.410900, 51.000000]);
    mesh.triangle([ -41.949900, -40.455000, 51.000000], [ -43.389000, -44.523000, 51.000000], [ -45.132000, -43.248000, 51.000000]);
    mesh.triangle([ -43.389000, -44.523000, 51.000000], [ -41.949900, -40.455000, 51.000000], [ -40.889400, -41.238300, 51.000000]);
    mesh.triangle([ -42.820800, -32.499900, 51.000000], [ -43.467600, -33.589100, 51.000000], [ -46.562000, -30.305000, 51.000000]);
    mesh.triangle([ -40.195000, -31.739000, 56.500000], [ -43.389000, -27.477000, 51.000000], [ -45.132000, -28.752000, 51.000000]);
    mesh.triangle([ -41.066000, -32.376000, 56.500000], [ -40.195000, -31.739000, 56.500000], [ -45.132000, -28.752000, 51.000000]);
    mesh.triangle([ -41.066000, -32.376000, 56.500000], [ -45.132000, -28.752000, 51.000000], [ -46.562000, -30.305000, 51.000000]);
    mesh.triangle([ -48.280000, -38.000000, 51.000000], [ -42.750000, -36.000000, 56.500000], [ -48.500000, -36.000000, 51.000000]);
    mesh.triangle([ -42.640000, -37.000000, 56.500000], [ -42.750000, -36.000000, 56.500000], [ -48.280000, -38.000000, 51.000000]);
    mesh.triangle([ -42.640000, -37.000000, 56.500000], [ -48.280000, -38.000000, 51.000000], [ -47.625000, -39.923000, 51.000000]);
    mesh.triangle([ -42.313000, -37.961000, 56.500000], [ -42.640000, -37.000000, 56.500000], [ -47.625000, -39.923000, 51.000000]);
    mesh.triangle([ -42.313000, -37.961000, 56.500000], [ -47.625000, -39.923000, 51.000000], [ -46.562000, -41.695000, 51.000000]);
    mesh.triangle([ -43.389000, -44.523000, 51.000000], [ -41.401000, -45.470000, 51.000000], [ -40.195000, -40.261000, 56.500000]);
    mesh.triangle([ -42.313000, -34.039000, 56.500000], [ -47.625000, -32.077000, 51.000000], [ -48.280000, -34.000000, 51.000000]);
    mesh.triangle([ -42.640000, -35.000000, 56.500000], [ -42.313000, -34.039000, 56.500000], [ -48.280000, -34.000000, 51.000000]);
    mesh.triangle([ -48.280000, -34.000000, 51.000000], [ -48.500000, -36.000000, 51.000000], [ -42.750000, -36.000000, 56.500000]);
    mesh.triangle([ -42.750000, -36.000000, 56.500000], [ -42.640000, -35.000000, 56.500000], [ -48.280000, -34.000000, 51.000000]);
    mesh.triangle([ -23.110000, -56.787000, 23.999000], [ -35.086000, -39.696000, 23.999000], [ -33.464000, -38.829000, 23.999000]);
    mesh.triangle([ -35.086000, -39.696000, 23.999000], [ -23.110000, -56.787000, 23.999000], [ -27.433000, -59.097000, 23.999000]);
    mesh.triangle([ -33.464000, -38.829000, 23.999000], [ -19.322000, -53.678000, 23.999000], [ -23.110000, -56.787000, 23.999000]);
    mesh.triangle([ -33.464000, -38.829000, 23.999000], [ -16.213000, -49.890000, 23.999000], [ -19.322000, -53.678000, 23.999000]);
    mesh.triangle([ -32.123000, -60.520000, 23.999000], [ -37.000000, -40.001000, 23.999000], [ -35.086000, -39.696000, 23.999000]);
    mesh.triangle([ -37.000000, -40.001000, 23.999000], [ -32.123000, -60.520000, 23.999000], [ -37.000000, -61.001000, 23.999000]);
    mesh.triangle([ -37.000000, -40.001000, 23.999000], [ -37.000000, -61.001000, 23.999000], [ -41.877000, -60.520000, 23.999000]);
    mesh.triangle([ -41.877000, -60.520000, 23.999000], [ -38.914000, -39.696000, 23.999000], [ -37.000000, -40.001000, 23.999000]);
    mesh.triangle([ -38.914000, -39.696000, 23.999000], [ -46.567000, -59.097000, 23.999000], [ -50.890000, -56.787000, 23.999000]);
    mesh.triangle([ -38.914000, -39.696000, 23.999000], [ -41.877000, -60.520000, 23.999000], [ -46.567000, -59.097000, 23.999000]);
    mesh.triangle([ -29.346000, -52.630000, 38.000000], [ -33.173000, -44.315000, 48.000000], [ -35.049000, -44.827000, 48.000000]);
    mesh.triangle([ -29.346000, -52.630000, 38.000000], [ -25.888000, -50.967000, 38.000000], [ -33.173000, -44.315000, 48.000000]);
    mesh.triangle([ -38.951000, -44.827000, 48.000000], [ -37.000000, -54.001000, 38.000000], [ -37.000000, -45.000000, 48.000000]);
    mesh.triangle([ -37.000000, -54.001000, 38.000000], [ -35.049000, -44.827000, 48.000000], [ -37.000000, -45.000000, 48.000000]);
    mesh.triangle([ -37.000000, -54.001000, 38.000000], [ -33.098000, -53.655000, 38.000000], [ -35.049000, -44.827000, 48.000000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -37.000000, -30.875000, 56.500000], [ -38.122000, -30.973000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -38.122000, -30.973000, 56.500000], [ -39.201000, -31.265000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -39.201000, -31.265000, 56.500000], [ -40.195000, -31.739000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -40.195000, -31.739000, 56.500000], [ -41.066000, -32.376000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -41.066000, -32.376000, 56.500000], [ -41.781000, -33.153000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -41.781000, -33.153000, 56.500000], [ -42.313000, -34.039000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -42.313000, -34.039000, 56.500000], [ -42.640000, -35.000000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -42.640000, -35.000000, 56.500000], [ -42.750000, -36.000000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -41.781000, -38.847000, 56.500000], [ -41.066000, -39.624000, 56.500000]);
    mesh.triangle([ -40.195000, -40.261000, 56.500000], [ -37.000000, -36.000000, 62.001000], [ -41.066000, -39.624000, 56.500000]);
    mesh.triangle([ -32.934000, -39.624000, 56.500000], [ -33.805000, -40.261000, 56.500000], [ -28.868000, -43.248000, 51.000000]);
    mesh.triangle([ -33.805000, -40.261000, 56.500000], [ -32.934000, -39.624000, 56.500000], [ -37.000000, -36.000000, 62.001000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -32.934000, -39.624000, 56.500000], [ -32.219000, -38.847000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -31.687000, -34.039000, 56.500000], [ -32.219000, -33.153000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -32.219000, -33.153000, 56.500000], [ -32.934000, -32.376000, 56.500000]);
    mesh.triangle([ -42.640000, -37.000000, 56.500000], [ -37.000000, -36.000000, 62.001000], [ -42.750000, -36.000000, 56.500000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -42.640000, -37.000000, 56.500000], [ -42.313000, -37.961000, 56.500000]);
    mesh.triangle([ -41.781000, -38.847000, 56.500000], [ -42.313000, -37.961000, 56.500000], [ -46.562000, -41.695000, 51.000000]);
    mesh.triangle([ -42.313000, -37.961000, 56.500000], [ -41.781000, -38.847000, 56.500000], [ -37.000000, -36.000000, 62.001000]);
    mesh.triangle([ -45.132000, -43.248000, 51.000000], [ -41.781000, -38.847000, 56.500000], [ -46.562000, -41.695000, 51.000000]);
    mesh.triangle([ -41.066000, -39.624000, 56.500000], [ -41.781000, -38.847000, 56.500000], [ -45.132000, -43.248000, 51.000000]);
    mesh.triangle([ -41.781000, -33.153000, 56.500000], [ -41.066000, -32.376000, 56.500000], [ -46.562000, -30.305000, 51.000000]);
    mesh.triangle([ -41.781000, -33.153000, 56.500000], [ -46.562000, -30.305000, 51.000000], [ -47.625000, -32.077000, 51.000000]);
    mesh.triangle([ -42.313000, -34.039000, 56.500000], [ -41.781000, -33.153000, 56.500000], [ -47.625000, -32.077000, 51.000000]);
    mesh.triangle([ -42.001000, -36.000000, 23.999000], [ -41.620000, -37.531000, -0.001000], [ -41.620000, -37.531000, 23.999000]);
    mesh.triangle([ -42.001000, -36.000000, -0.001000], [ -41.620000, -37.531000, -0.001000], [ -42.001000, -36.000000, 23.999000]);
    mesh.triangle([ -40.536000, -38.829000, 23.999000], [ -41.620000, -37.531000, -0.001000], [ -40.536000, -38.829000, -0.001000]);
    mesh.triangle([ -41.620000, -37.531000, 23.999000], [ -41.620000, -37.531000, -0.001000], [ -40.536000, -38.829000, 23.999000]);
    mesh.triangle([ -38.914000, -39.696000, 23.999000], [ -40.536000, -38.829000, -0.001000], [ -38.914000, -39.696000, -0.001000]);
    mesh.triangle([ -40.536000, -38.829000, 23.999000], [ -40.536000, -38.829000, -0.001000], [ -38.914000, -39.696000, 23.999000]);
    mesh.triangle([ -35.086000, -39.696000, 23.999000], [ -27.433000, -59.097000, 23.999000], [ -32.123000, -60.520000, 23.999000]);
    mesh.triangle([ -37.000000, -40.001000, 23.999000], [ -38.914000, -39.696000, -0.001000], [ -37.000000, -40.001000, -0.001000]);
    mesh.triangle([ -38.914000, -39.696000, 23.999000], [ -38.914000, -39.696000, -0.001000], [ -37.000000, -40.001000, 23.999000]);
    mesh.triangle([ -32.380000, -37.531000, 23.999000], [ -13.903000, -45.567000, 23.999000], [ -16.213000, -49.890000, 23.999000]);
    mesh.triangle([ -16.213000, -49.890000, 23.999000], [ -33.464000, -38.829000, 23.999000], [ -32.380000, -37.531000, 23.999000]);
    mesh.triangle([ -37.000000, -40.001000, 23.999000], [ -35.086000, -39.696000, -0.001000], [ -35.086000, -39.696000, 23.999000]);
    mesh.triangle([ -37.000000, -40.001000, -0.001000], [ -35.086000, -39.696000, -0.001000], [ -37.000000, -40.001000, 23.999000]);
    mesh.triangle([ -33.464000, -38.829000, 23.999000], [ -35.086000, -39.696000, -0.001000], [ -33.464000, -38.829000, -0.001000]);
    mesh.triangle([ -35.086000, -39.696000, 23.999000], [ -35.086000, -39.696000, -0.001000], [ -33.464000, -38.829000, 23.999000]);
    mesh.triangle([ -32.380000, -37.531000, 23.999000], [ -32.000000, -36.000000, 23.999000], [ -12.480000, -40.877000, 23.999000]);
    mesh.triangle([ -32.380000, -37.531000, 23.999000], [ -12.480000, -40.877000, 23.999000], [ -13.903000, -45.567000, 23.999000]);
    mesh.triangle([ -32.380000, -37.531000, 23.999000], [ -33.464000, -38.829000, -0.001000], [ -32.380000, -37.531000, -0.001000]);
    mesh.triangle([ -33.464000, -38.829000, 23.999000], [ -33.464000, -38.829000, -0.001000], [ -32.380000, -37.531000, 23.999000]);
    mesh.triangle([ -32.000000, -36.000000, 23.999000], [ -32.380000, -37.531000, -0.001000], [ -32.000000, -36.000000, -0.001000]);
    mesh.triangle([ -32.380000, -37.531000, 23.999000], [ -32.380000, -37.531000, -0.001000], [ -32.000000, -36.000000, 23.999000]);
    mesh.triangle([ -35.086000, -32.304000, 23.999000], [ -32.123000, -11.480000, 23.999000], [ -27.433000, -12.903000, 23.999000]);
    mesh.triangle([ -35.086000, -32.304000, 23.999000], [ -27.433000, -12.903000, 23.999000], [ -23.110000, -15.213000, 23.999000]);
    mesh.triangle([ -32.380000, -34.469000, 23.999000], [ -33.464000, -33.171000, 23.999000], [ -16.213000, -22.110000, 23.999000]);
    mesh.triangle([ -32.380000, -34.469000, 23.999000], [ -32.000000, -36.000000, -0.001000], [ -32.380000, -34.469000, -0.001000]);
    mesh.triangle([ -32.000000, -36.000000, 23.999000], [ -32.000000, -36.000000, -0.001000], [ -32.380000, -34.469000, 23.999000]);
    mesh.triangle([ -33.464000, -33.171000, 23.999000], [ -32.380000, -34.469000, -0.001000], [ -33.464000, -33.171000, -0.001000]);
    mesh.triangle([ -32.380000, -34.469000, 23.999000], [ -32.380000, -34.469000, -0.001000], [ -33.464000, -33.171000, 23.999000]);
    mesh.triangle([ -35.086000, -32.304000, 23.999000], [ -33.464000, -33.171000, -0.001000], [ -35.086000, -32.304000, -0.001000]);
    mesh.triangle([ -33.464000, -33.171000, 23.999000], [ -33.464000, -33.171000, -0.001000], [ -35.086000, -32.304000, 23.999000]);
    mesh.triangle([ -37.000000, -31.999000, 23.999000], [ -41.877000, -11.480000, 23.999000], [ -37.000000, -11.000000, 23.999000]);
    mesh.triangle([ -49.260000, -38.439000, 34.000000], [ -49.500000, -36.000000, 34.000000], [ -61.520000, -40.877000, 23.999000]);
    mesh.triangle([ -49.260000, -38.439000, 34.000000], [ -61.520000, -40.877000, 23.999000], [ -60.097000, -45.567000, 23.999000]);
    mesh.triangle([ -50.890000, -56.787000, 23.999000], [ -54.678000, -53.678000, 23.999000], [ -40.536000, -38.829000, 23.999000]);
    mesh.triangle([ -44.654000, -52.630000, 38.000000], [ -40.902000, -53.655000, 38.000000], [ -40.827000, -44.315000, 48.000000]);
    mesh.triangle([ -41.784000, -47.549000, 34.000000], [ -39.870600, -42.929900, 38.000000], [ -41.167300, -42.236800, 38.000000]);
    mesh.triangle([ -44.654000, -52.630000, 38.000000], [ -48.112000, -50.967000, 38.000000], [ -41.167300, -42.236800, 38.000000]);
    mesh.triangle([ -39.870600, -42.929900, 38.000000], [ -40.902000, -53.655000, 38.000000], [ -44.654000, -52.630000, 38.000000]);
    mesh.triangle([ -45.839000, -44.839000, 34.000000], [ -50.890000, -56.787000, 23.999000], [ -43.945000, -46.394000, 34.000000]);
    mesh.triangle([ -46.567000, -59.097000, 23.999000], [ -41.784000, -47.549000, 34.000000], [ -43.945000, -46.394000, 34.000000]);
    mesh.triangle([ -46.567000, -59.097000, 23.999000], [ -41.877000, -60.520000, 23.999000], [ -41.784000, -47.549000, 34.000000]);
    mesh.triangle([ -42.001000, -36.000000, 23.999000], [ -41.620000, -37.531000, 23.999000], [ -61.520000, -40.877000, 23.999000]);
    mesh.triangle([ -41.949900, -31.545000, 51.000000], [ -40.889400, -30.761700, 51.000000], [ -42.556000, -28.517000, 48.000000]);
    mesh.triangle([ -44.071000, -29.636000, 48.000000], [ -45.315000, -31.000000, 48.000000], [ -42.820800, -32.499900, 51.000000]);
    mesh.triangle([ -42.820800, -32.499900, 51.000000], [ -41.949900, -31.545000, 51.000000], [ -44.071000, -29.636000, 48.000000]);
    mesh.triangle([ -42.556000, -28.517000, 48.000000], [ -44.071000, -29.636000, 48.000000], [ -41.949900, -31.545000, 51.000000]);
    mesh.triangle([ -46.239000, -39.444000, 48.000000], [ -43.467600, -38.410900, 51.000000], [ -43.865900, -37.229300, 51.000000]);
    mesh.triangle([ -43.467600, -38.410900, 51.000000], [ -46.239000, -39.444000, 48.000000], [ -45.315000, -41.000000, 48.000000]);
    mesh.triangle([ -45.315000, -41.000000, 48.000000], [ -42.820800, -39.500100, 51.000000], [ -43.467600, -38.410900, 51.000000]);
    mesh.triangle([ -44.071000, -42.364000, 48.000000], [ -42.820800, -39.500100, 51.000000], [ -45.315000, -41.000000, 48.000000]);
    mesh.triangle([ -45.315000, -31.000000, 48.000000], [ -46.239000, -32.556000, 48.000000], [ -43.467600, -33.589100, 51.000000]);
    mesh.triangle([ -43.467600, -33.589100, 51.000000], [ -42.820800, -32.499900, 51.000000], [ -45.315000, -31.000000, 48.000000]);
    mesh.triangle([ -43.467600, -33.589100, 51.000000], [ -46.239000, -32.556000, 48.000000], [ -43.865900, -34.770700, 51.000000]);
    mesh.triangle([ -46.808000, -37.756000, 48.000000], [ -44.000300, -36.000000, 51.000000], [ -47.000000, -36.000000, 48.000000]);
    mesh.triangle([ -43.865900, -37.229300, 51.000000], [ -44.000300, -36.000000, 51.000000], [ -46.808000, -37.756000, 48.000000]);
    mesh.triangle([ -46.239000, -39.444000, 48.000000], [ -43.865900, -37.229300, 51.000000], [ -46.808000, -37.756000, 48.000000]);
    mesh.triangle([ -46.808000, -34.244000, 48.000000], [ -43.865900, -34.770700, 51.000000], [ -46.239000, -32.556000, 48.000000]);
    mesh.triangle([ -44.000300, -36.000000, 51.000000], [ -43.865900, -34.770700, 51.000000], [ -46.808000, -34.244000, 48.000000]);
    mesh.triangle([ -46.808000, -34.244000, 48.000000], [ -47.000000, -36.000000, 48.000000], [ -44.000300, -36.000000, 51.000000]);
    mesh.triangle([ -32.599000, -26.530000, 51.000000], [ -33.110600, -30.761700, 51.000000], [ -34.321000, -30.179300, 51.000000]);
    mesh.triangle([ -34.321000, -30.179300, 51.000000], [ -34.756000, -25.946000, 51.000000], [ -32.599000, -26.530000, 51.000000]);
    mesh.triangle([ -34.756000, -25.946000, 51.000000], [ -34.321000, -30.179300, 51.000000], [ -35.634200, -29.820800, 51.000000]);
    mesh.triangle([ -35.634200, -29.820800, 51.000000], [ -37.000000, -25.750000, 51.000000], [ -34.756000, -25.946000, 51.000000]);
    mesh.triangle([ -37.000000, -25.750000, 51.000000], [ -35.634200, -29.820800, 51.000000], [ -37.000000, -29.699700, 51.000000]);
    mesh.triangle([ -37.000000, -25.750000, 51.000000], [ -37.000000, -29.699700, 51.000000], [ -38.365800, -29.820800, 51.000000]);
    mesh.triangle([ -38.365800, -29.820800, 51.000000], [ -39.244000, -25.946000, 51.000000], [ -37.000000, -25.750000, 51.000000]);
    mesh.triangle([ -39.244000, -25.946000, 51.000000], [ -38.365800, -29.820800, 51.000000], [ -39.679000, -30.179300, 51.000000]);
    mesh.triangle([ -41.949900, -31.545000, 51.000000], [ -45.132000, -28.752000, 51.000000], [ -43.389000, -27.477000, 51.000000]);
    mesh.triangle([ -41.401000, -26.530000, 51.000000], [ -39.244000, -25.946000, 51.000000], [ -39.679000, -30.179300, 51.000000]);
    mesh.triangle([ -40.889400, -30.761700, 51.000000], [ -43.389000, -27.477000, 51.000000], [ -41.401000, -26.530000, 51.000000]);
    mesh.triangle([ -41.401000, -26.530000, 51.000000], [ -39.679000, -30.179300, 51.000000], [ -40.889400, -30.761700, 51.000000]);
    mesh.triangle([ -45.132000, -28.752000, 51.000000], [ -41.949900, -31.545000, 51.000000], [ -42.820800, -32.499900, 51.000000]);
    mesh.triangle([ -42.820800, -32.499900, 51.000000], [ -46.562000, -30.305000, 51.000000], [ -45.132000, -28.752000, 51.000000]);
    mesh.triangle([ -30.611000, -27.477000, 51.000000], [ -32.934000, -32.376000, 56.500000], [ -28.868000, -28.752000, 51.000000]);
    mesh.triangle([ -34.799000, -31.265000, 56.500000], [ -32.599000, -26.530000, 51.000000], [ -34.756000, -25.946000, 51.000000]);
    mesh.triangle([ -33.805000, -31.739000, 56.500000], [ -32.934000, -32.376000, 56.500000], [ -30.611000, -27.477000, 51.000000]);
    mesh.triangle([ -33.805000, -31.739000, 56.500000], [ -30.611000, -27.477000, 51.000000], [ -32.599000, -26.530000, 51.000000]);
    mesh.triangle([ -34.799000, -31.265000, 56.500000], [ -33.805000, -31.739000, 56.500000], [ -32.599000, -26.530000, 51.000000]);
    mesh.triangle([ -35.878000, -30.973000, 56.500000], [ -34.799000, -31.265000, 56.500000], [ -34.756000, -25.946000, 51.000000]);
    mesh.triangle([ -37.000000, -25.750000, 51.000000], [ -37.000000, -30.875000, 56.500000], [ -35.878000, -30.973000, 56.500000]);
    mesh.triangle([ -35.878000, -30.973000, 56.500000], [ -34.756000, -25.946000, 51.000000], [ -37.000000, -25.750000, 51.000000]);
    mesh.triangle([ -37.000000, -25.750000, 51.000000], [ -39.244000, -25.946000, 51.000000], [ -38.122000, -30.973000, 56.500000]);
    mesh.triangle([ -38.122000, -30.973000, 56.500000], [ -37.000000, -30.875000, 56.500000], [ -37.000000, -25.750000, 51.000000]);
    mesh.triangle([ -37.000000, -31.999000, 23.999000], [ -35.086000, -32.304000, -0.001000], [ -37.000000, -31.999000, -0.001000]);
    mesh.triangle([ -35.086000, -32.304000, 23.999000], [ -35.086000, -32.304000, -0.001000], [ -37.000000, -31.999000, 23.999000]);
    mesh.triangle([ -38.914000, -32.304000, 23.999000], [ -40.536000, -33.171000, 23.999000], [ -50.890000, -15.213000, 23.999000]);
    mesh.triangle([ -40.536000, -33.171000, 23.999000], [ -41.620000, -34.469000, 23.999000], [ -57.787000, -22.110000, 23.999000]);
    mesh.triangle([ -38.914000, -32.304000, 23.999000], [ -37.000000, -31.999000, -0.001000], [ -38.914000, -32.304000, -0.001000]);
    mesh.triangle([ -37.000000, -31.999000, 23.999000], [ -37.000000, -31.999000, -0.001000], [ -38.914000, -32.304000, 23.999000]);
    mesh.triangle([ -40.536000, -33.171000, 23.999000], [ -38.914000, -32.304000, -0.001000], [ -40.536000, -33.171000, -0.001000]);
    mesh.triangle([ -38.914000, -32.304000, 23.999000], [ -38.914000, -32.304000, -0.001000], [ -40.536000, -33.171000, 23.999000]);
    mesh.triangle([ -41.620000, -34.469000, 23.999000], [ -40.536000, -33.171000, -0.001000], [ -41.620000, -34.469000, -0.001000]);
    mesh.triangle([ -40.536000, -33.171000, 23.999000], [ -40.536000, -33.171000, -0.001000], [ -41.620000, -34.469000, 23.999000]);
    mesh.triangle([ -42.001000, -36.000000, 23.999000], [ -61.520000, -40.877000, 23.999000], [ -62.001000, -36.000000, 23.999000]);
    mesh.triangle([ -42.001000, -36.000000, 23.999000], [ -41.620000, -34.469000, -0.001000], [ -42.001000, -36.000000, -0.001000]);
    mesh.triangle([ -41.620000, -34.469000, 23.999000], [ -41.620000, -34.469000, -0.001000], [ -42.001000, -36.000000, 23.999000]);
    mesh.triangle([ -32.050100, -31.545000, 51.000000], [ -30.611000, -27.477000, 51.000000], [ -28.868000, -28.752000, 51.000000]);
    mesh.triangle([ -27.438000, -41.695000, 51.000000], [ -28.868000, -43.248000, 51.000000], [ -31.179300, -39.500100, 51.000000]);
    mesh.triangle([ -25.720000, -38.000000, 51.000000], [ -30.134100, -37.229300, 51.000000], [ -29.999700, -36.000000, 51.000000]);
    mesh.triangle([ -30.134100, -34.770700, 51.000000], [ -26.375000, -32.077000, 51.000000], [ -25.720000, -34.000000, 51.000000]);
    mesh.triangle([ -30.134100, -34.770700, 51.000000], [ -25.720000, -34.000000, 51.000000], [ -29.999700, -36.000000, 51.000000]);
    mesh.triangle([ -25.720000, -38.000000, 51.000000], [ -26.375000, -39.923000, 51.000000], [ -30.134100, -37.229300, 51.000000]);
    mesh.triangle([ -26.375000, -39.923000, 51.000000], [ -27.438000, -41.695000, 51.000000], [ -30.532400, -38.410900, 51.000000]);
    mesh.triangle([ -31.179300, -39.500100, 51.000000], [ -30.532400, -38.410900, 51.000000], [ -27.438000, -41.695000, 51.000000]);
    mesh.triangle([ -32.050100, -40.455000, 51.000000], [ -31.179300, -39.500100, 51.000000], [ -28.868000, -43.248000, 51.000000]);
    mesh.triangle([ -30.532400, -38.410900, 51.000000], [ -30.134100, -37.229300, 51.000000], [ -26.375000, -39.923000, 51.000000]);
    mesh.triangle([ -29.999700, -36.000000, 51.000000], [ -25.500000, -36.000000, 51.000000], [ -25.720000, -38.000000, 51.000000]);
    mesh.triangle([ -29.999700, -36.000000, 51.000000], [ -25.720000, -34.000000, 51.000000], [ -25.500000, -36.000000, 51.000000]);
    mesh.triangle([ -26.375000, -32.077000, 51.000000], [ -30.134100, -34.770700, 51.000000], [ -30.532400, -33.589100, 51.000000]);
    mesh.triangle([ -30.532400, -33.589100, 51.000000], [ -31.179300, -32.499900, 51.000000], [ -27.438000, -30.305000, 51.000000]);
    mesh.triangle([ -31.687000, -34.039000, 56.500000], [ -27.438000, -30.305000, 51.000000], [ -32.219000, -33.153000, 56.500000]);
    mesh.triangle([ -27.438000, -30.305000, 51.000000], [ -31.687000, -34.039000, 56.500000], [ -26.375000, -32.077000, 51.000000]);
    mesh.triangle([ -32.219000, -33.153000, 56.500000], [ -27.438000, -30.305000, 51.000000], [ -28.868000, -28.752000, 51.000000]);
    mesh.triangle([ -27.438000, -41.695000, 51.000000], [ -32.219000, -38.847000, 56.500000], [ -32.934000, -39.624000, 56.500000]);
    mesh.triangle([ -26.375000, -39.923000, 51.000000], [ -32.219000, -38.847000, 56.500000], [ -27.438000, -41.695000, 51.000000]);
    mesh.triangle([ -26.375000, -39.923000, 51.000000], [ -31.687000, -37.961000, 56.500000], [ -32.219000, -38.847000, 56.500000]);
    mesh.triangle([ -31.360000, -37.000000, 56.500000], [ -31.687000, -37.961000, 56.500000], [ -25.720000, -38.000000, 51.000000]);
    mesh.triangle([ -25.720000, -38.000000, 51.000000], [ -31.687000, -37.961000, 56.500000], [ -26.375000, -39.923000, 51.000000]);
    mesh.triangle([ -57.787000, -22.110000, 23.999000], [ -54.678000, -18.322000, 23.999000], [ -40.536000, -33.171000, 23.999000]);
    mesh.triangle([ -60.097000, -26.433000, 23.999000], [ -57.787000, -22.110000, 23.999000], [ -41.620000, -34.469000, 23.999000]);
    mesh.triangle([ -54.678000, -18.322000, 23.999000], [ -50.890000, -15.213000, 23.999000], [ -40.536000, -33.171000, 23.999000]);
    mesh.triangle([ -46.567000, -12.903000, 23.999000], [ -41.877000, -11.480000, 23.999000], [ -38.914000, -32.304000, 23.999000]);
    mesh.triangle([ -50.890000, -15.213000, 23.999000], [ -46.567000, -12.903000, 23.999000], [ -38.914000, -32.304000, 23.999000]);
    mesh.triangle([ -61.520000, -31.123000, 23.999000], [ -60.097000, -26.433000, 23.999000], [ -41.620000, -34.469000, 23.999000]);
    mesh.triangle([ -57.787000, -49.890000, 23.999000], [ -41.620000, -37.531000, 23.999000], [ -40.536000, -38.829000, 23.999000]);
    mesh.triangle([ -41.620000, -34.469000, 23.999000], [ -42.001000, -36.000000, 23.999000], [ -61.520000, -31.123000, 23.999000]);
    mesh.triangle([ -40.536000, -38.829000, 23.999000], [ -38.914000, -39.696000, 23.999000], [ -50.890000, -56.787000, 23.999000]);
    mesh.triangle([ -62.001000, -36.000000, 23.999000], [ -61.520000, -31.123000, 23.999000], [ -42.001000, -36.000000, 23.999000]);
    mesh.triangle([ -40.536000, -38.829000, 23.999000], [ -54.678000, -53.678000, 23.999000], [ -57.787000, -49.890000, 23.999000]);
    mesh.triangle([ -57.787000, -49.890000, 23.999000], [ -60.097000, -45.567000, 23.999000], [ -41.620000, -37.531000, 23.999000]);
    mesh.triangle([ -60.097000, -45.567000, 23.999000], [ -61.520000, -40.877000, 23.999000], [ -41.620000, -37.531000, 23.999000]);
    mesh.triangle([ -37.000000, -46.250000, 51.000000], [ -38.122000, -41.027000, 56.500000], [ -39.244000, -46.054000, 51.000000]);
    mesh.triangle([ -37.000000, -41.125000, 56.500000], [ -38.122000, -41.027000, 56.500000], [ -37.000000, -46.250000, 51.000000]);
    mesh.triangle([ -37.000000, -41.125000, 56.500000], [ -37.000000, -36.000000, 62.001000], [ -38.122000, -41.027000, 56.500000]);
    mesh.triangle([ -37.000000, -46.250000, 51.000000], [ -34.756000, -46.054000, 51.000000], [ -35.878000, -41.027000, 56.500000]);
    mesh.triangle([ -35.878000, -41.027000, 56.500000], [ -37.000000, -41.125000, 56.500000], [ -37.000000, -46.250000, 51.000000]);
    mesh.triangle([ -37.000000, -41.125000, 56.500000], [ -35.878000, -41.027000, 56.500000], [ -37.000000, -36.000000, 62.001000]);
    mesh.triangle([ -32.599000, -45.470000, 51.000000], [ -35.878000, -41.027000, 56.500000], [ -34.756000, -46.054000, 51.000000]);
    mesh.triangle([ -34.799000, -40.735000, 56.500000], [ -35.878000, -41.027000, 56.500000], [ -32.599000, -45.470000, 51.000000]);
    mesh.triangle([ -37.000000, -36.000000, 62.001000], [ -35.878000, -41.027000, 56.500000], [ -34.799000, -40.735000, 56.500000]);
    mesh.triangle([ -33.805000, -40.261000, 56.500000], [ -34.799000, -40.735000, 56.500000], [ -30.611000, -44.523000, 51.000000]);
    mesh.triangle([ -32.599000, -45.470000, 51.000000], [ -30.611000, -44.523000, 51.000000], [ -34.799000, -40.735000, 56.500000]);
    mesh.triangle([ -33.805000, -40.261000, 56.500000], [ -30.611000, -44.523000, 51.000000], [ -28.868000, -43.248000, 51.000000]);
    mesh.triangle([ -41.066000, -39.624000, 56.500000], [ -43.389000, -44.523000, 51.000000], [ -40.195000, -40.261000, 56.500000]);
    mesh.triangle([ -41.066000, -39.624000, 56.500000], [ -45.132000, -43.248000, 51.000000], [ -43.389000, -44.523000, 51.000000]);
    mesh.triangle([ -39.201000, -40.735000, 56.500000], [ -40.195000, -40.261000, 56.500000], [ -41.401000, -45.470000, 51.000000]);
    mesh.triangle([ -39.201000, -40.735000, 56.500000], [ -41.401000, -45.470000, 51.000000], [ -39.244000, -46.054000, 51.000000]);
    mesh.triangle([ -40.536000, -33.171000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -41.620000, -34.469000, -0.001000]);
    mesh.triangle([ -38.914000, -32.304000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -40.536000, -33.171000, -0.001000]);
    mesh.triangle([ -37.000000, -31.999000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -38.914000, -32.304000, -0.001000]);
    mesh.triangle([ -35.086000, -32.304000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -37.000000, -31.999000, -0.001000]);
    mesh.triangle([ -33.464000, -33.171000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -35.086000, -32.304000, -0.001000]);
    mesh.triangle([ -32.380000, -34.469000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -33.464000, -33.171000, -0.001000]);
    mesh.triangle([ -32.000000, -36.000000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -32.380000, -34.469000, -0.001000]);
    mesh.triangle([ -32.380000, -37.531000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -32.000000, -36.000000, -0.001000]);
    mesh.triangle([ -33.464000, -38.829000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -32.380000, -37.531000, -0.001000]);
    mesh.triangle([ -35.086000, -39.696000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -33.464000, -38.829000, -0.001000]);
    mesh.triangle([ -37.000000, -40.001000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -35.086000, -39.696000, -0.001000]);
    mesh.triangle([ -38.914000, -39.696000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -37.000000, -40.001000, -0.001000]);
    mesh.triangle([ -40.536000, -38.829000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -38.914000, -39.696000, -0.001000]);
    mesh.triangle([ -41.620000, -37.531000, -0.001000], [ -42.001000, -36.000000, -0.001000], [ -40.536000, -38.829000, -0.001000]);
    mesh.triangle([ -23.110000, -15.213000, 23.999000], [ -19.322000, -18.322000, 23.999000], [ -33.464000, -33.171000, 23.999000]);
    mesh.triangle([ -19.322000, -18.322000, 23.999000], [ -16.213000, -22.110000, 23.999000], [ -33.464000, -33.171000, 23.999000]);
    mesh.triangle([ -16.213000, -22.110000, 23.999000], [ -13.903000, -26.433000, 23.999000], [ -32.380000, -34.469000, 23.999000]);
    mesh.triangle([ -23.110000, -15.213000, 23.999000], [ -33.464000, -33.171000, 23.999000], [ -35.086000, -32.304000, 23.999000]);
    mesh.triangle([ -12.480000, -31.123000, 23.999000], [ -12.000000, -36.000000, 23.999000], [ -32.000000, -36.000000, 23.999000]);
    mesh.triangle([ -12.000000, -36.000000, 23.999000], [ -12.480000, -40.877000, 23.999000], [ -32.000000, -36.000000, 23.999000]);
    mesh.triangle([ -32.380000, -34.469000, 23.999000], [ -13.903000, -26.433000, 23.999000], [ -12.480000, -31.123000, 23.999000]);
    mesh.triangle([ -32.000000, -36.000000, 23.999000], [ -32.380000, -34.469000, 23.999000], [ -12.480000, -31.123000, 23.999000]);
    mesh.triangle([ -27.761000, -32.556000, 48.000000], [ -30.532400, -33.589100, 51.000000], [ -30.134100, -34.770700, 51.000000]);
    mesh.triangle([ -28.685000, -31.000000, 48.000000], [ -27.761000, -32.556000, 48.000000], [ -20.370000, -25.999000, 38.000000]);
    mesh.triangle([ -28.685000, -31.000000, 48.000000], [ -31.179300, -32.499900, 51.000000], [ -30.532400, -33.589100, 51.000000]);
    mesh.triangle([ -30.532400, -33.589100, 51.000000], [ -27.761000, -32.556000, 48.000000], [ -28.685000, -31.000000, 48.000000]);
    mesh.triangle([ -29.929000, -29.636000, 48.000000], [ -32.050100, -31.545000, 51.000000], [ -31.179300, -32.499900, 51.000000]);
    mesh.triangle([ -31.179300, -32.499900, 51.000000], [ -28.685000, -31.000000, 48.000000], [ -29.929000, -29.636000, 48.000000]);
    mesh.triangle([ -31.444000, -28.517000, 48.000000], [ -29.929000, -29.636000, 48.000000], [ -25.888000, -21.033000, 38.000000]);
    mesh.triangle([ -32.050100, -31.545000, 51.000000], [ -29.929000, -29.636000, 48.000000], [ -31.444000, -28.517000, 48.000000]);
    mesh.triangle([ -27.761000, -39.444000, 48.000000], [ -18.522000, -42.888000, 38.000000], [ -27.192000, -37.756000, 48.000000]);
    mesh.triangle([ -28.685000, -41.000000, 48.000000], [ -27.761000, -39.444000, 48.000000], [ -30.532400, -38.410900, 51.000000]);
    mesh.triangle([ -42.820800, -39.500100, 51.000000], [ -44.071000, -42.364000, 48.000000], [ -41.949900, -40.455000, 51.000000]);
    mesh.triangle([ -41.949900, -40.455000, 51.000000], [ -44.071000, -42.364000, 48.000000], [ -42.556000, -43.483000, 48.000000]);
    mesh.triangle([ -42.556000, -43.483000, 48.000000], [ -40.889400, -41.238300, 51.000000], [ -41.949900, -40.455000, 51.000000]);
    mesh.triangle([ -33.110600, -41.238300, 51.000000], [ -34.321000, -41.820800, 51.000000], [ -33.173000, -44.315000, 48.000000]);
    mesh.triangle([ -33.110600, -41.238300, 51.000000], [ -31.444000, -43.483000, 48.000000], [ -32.050100, -40.455000, 51.000000]);
    mesh.triangle([ -40.889400, -41.238300, 51.000000], [ -42.556000, -43.483000, 48.000000], [ -40.827000, -44.315000, 48.000000]);
    mesh.triangle([ -40.827000, -44.315000, 48.000000], [ -39.679000, -41.820800, 51.000000], [ -40.889400, -41.238300, 51.000000]);
    mesh.triangle([ -40.827000, -44.315000, 48.000000], [ -40.902000, -53.655000, 38.000000], [ -38.951000, -44.827000, 48.000000]);
    mesh.triangle([ -39.679000, -41.820800, 51.000000], [ -40.827000, -44.315000, 48.000000], [ -38.951000, -44.827000, 48.000000]);
    mesh.triangle([ -38.951000, -44.827000, 48.000000], [ -38.365800, -42.179200, 51.000000], [ -39.679000, -41.820800, 51.000000]);
    mesh.triangle([ -37.000000, -45.000000, 48.000000], [ -37.000000, -42.300300, 51.000000], [ -38.365800, -42.179200, 51.000000]);
    mesh.triangle([ -38.365800, -42.179200, 51.000000], [ -38.951000, -44.827000, 48.000000], [ -37.000000, -45.000000, 48.000000]);
    mesh.triangle([ -35.634200, -42.179200, 51.000000], [ -37.000000, -45.000000, 48.000000], [ -35.049000, -44.827000, 48.000000]);
    mesh.triangle([ -37.000000, -42.300300, 51.000000], [ -37.000000, -45.000000, 48.000000], [ -35.634200, -42.179200, 51.000000]);
    mesh.triangle([ -34.321000, -41.820800, 51.000000], [ -35.634200, -42.179200, 51.000000], [ -35.049000, -44.827000, 48.000000]);
    mesh.triangle([ -35.049000, -44.827000, 48.000000], [ -33.173000, -44.315000, 48.000000], [ -34.321000, -41.820800, 51.000000]);
    mesh.triangle([ -31.444000, -43.483000, 48.000000], [ -33.173000, -44.315000, 48.000000], [ -25.888000, -50.967000, 38.000000]);
    mesh.triangle([ -33.173000, -44.315000, 48.000000], [ -31.444000, -43.483000, 48.000000], [ -33.110600, -41.238300, 51.000000]);
    mesh.triangle([ -22.858000, -48.728000, 38.000000], [ -31.696200, -41.303800, 38.000000], [ -30.763200, -40.167300, 38.000000]);
    mesh.triangle([ -20.370000, -46.001000, 38.000000], [ -30.763200, -40.167300, 38.000000], [ -30.070100, -38.870600, 38.000000]);
    mesh.triangle([ -30.763200, -40.167300, 38.000000], [ -20.370000, -46.001000, 38.000000], [ -22.858000, -48.728000, 38.000000]);
    mesh.triangle([ -31.444000, -43.483000, 48.000000], [ -22.858000, -48.728000, 38.000000], [ -29.929000, -42.364000, 48.000000]);
    mesh.triangle([ -29.929000, -42.364000, 48.000000], [ -22.858000, -48.728000, 38.000000], [ -20.370000, -46.001000, 38.000000]);
    mesh.triangle([ -55.478000, -42.888000, 38.000000], [ -46.239000, -39.444000, 48.000000], [ -46.808000, -37.756000, 48.000000]);
    mesh.triangle([ -47.000000, -36.000000, 48.000000], [ -46.808000, -34.244000, 48.000000], [ -57.001000, -36.000000, 38.000000]);
    mesh.triangle([ -55.478000, -42.888000, 38.000000], [ -46.808000, -37.756000, 48.000000], [ -56.616000, -39.512000, 38.000000]);
    mesh.triangle([ -51.142000, -23.272000, 38.000000], [ -53.630000, -25.999000, 38.000000], [ -44.071000, -29.636000, 48.000000]);
    mesh.triangle([ -51.142000, -23.272000, 38.000000], [ -42.303800, -30.696200, 38.000000], [ -43.236800, -31.832700, 38.000000]);
    mesh.triangle([ -44.071000, -29.636000, 48.000000], [ -53.630000, -25.999000, 38.000000], [ -45.315000, -31.000000, 48.000000]);
    mesh.triangle([ -53.630000, -25.999000, 38.000000], [ -55.478000, -29.112000, 38.000000], [ -45.315000, -31.000000, 48.000000]);
    mesh.triangle([ -45.315000, -31.000000, 48.000000], [ -55.478000, -29.112000, 38.000000], [ -46.239000, -32.556000, 48.000000]);
    mesh.triangle([ -42.303800, -30.696200, 38.000000], [ -51.142000, -23.272000, 38.000000], [ -48.112000, -21.033000, 38.000000]);
    mesh.triangle([ -45.839000, -27.161000, 34.000000], [ -43.945000, -25.606000, 34.000000], [ -54.678000, -18.322000, 23.999000]);
    mesh.triangle([ -54.678000, -18.322000, 23.999000], [ -43.945000, -25.606000, 34.000000], [ -50.890000, -15.213000, 23.999000]);
    mesh.triangle([ -45.839000, -27.161000, 34.000000], [ -54.678000, -18.322000, 23.999000], [ -57.787000, -22.110000, 23.999000]);
    mesh.triangle([ -47.394000, -29.055000, 34.000000], [ -45.839000, -27.161000, 34.000000], [ -57.787000, -22.110000, 23.999000]);
    mesh.triangle([ -48.549000, -31.216000, 34.000000], [ -43.929900, -33.129400, 38.000000], [ -43.236800, -31.832700, 38.000000]);
    mesh.triangle([ -57.787000, -22.110000, 23.999000], [ -60.097000, -26.433000, 23.999000], [ -47.394000, -29.055000, 34.000000]);
    mesh.triangle([ -60.097000, -26.433000, 23.999000], [ -48.549000, -31.216000, 34.000000], [ -47.394000, -29.055000, 34.000000]);
    mesh.triangle([ -43.929900, -33.129400, 38.000000], [ -48.549000, -31.216000, 34.000000], [ -49.260000, -33.561000, 34.000000]);
    mesh.triangle([ -49.260000, -33.561000, 34.000000], [ -48.549000, -31.216000, 34.000000], [ -61.520000, -31.123000, 23.999000]);
    mesh.triangle([ -48.549000, -31.216000, 34.000000], [ -60.097000, -26.433000, 23.999000], [ -61.520000, -31.123000, 23.999000]);
    mesh.triangle([ -56.616000, -32.488000, 38.000000], [ -55.478000, -29.112000, 38.000000], [ -44.356500, -34.536500, 38.000000]);
    mesh.triangle([ -44.356500, -37.463500, 38.000000], [ -44.500500, -36.000000, 38.000000], [ -49.500000, -36.000000, 34.000000]);
    mesh.triangle([ -49.260000, -38.439000, 34.000000], [ -48.549000, -40.784000, 34.000000], [ -43.929900, -38.870600, 38.000000]);
    mesh.triangle([ -43.929900, -38.870600, 38.000000], [ -44.356500, -37.463500, 38.000000], [ -49.260000, -38.439000, 34.000000]);
    mesh.triangle([ -48.549000, -40.784000, 34.000000], [ -49.260000, -38.439000, 34.000000], [ -60.097000, -45.567000, 23.999000]);
    mesh.triangle([ -49.500000, -36.000000, 34.000000], [ -44.500500, -36.000000, 38.000000], [ -44.356500, -34.536500, 38.000000]);
    mesh.triangle([ -43.929900, -38.870600, 38.000000], [ -43.236800, -40.167300, 38.000000], [ -53.630000, -46.001000, 38.000000]);
    mesh.triangle([ -47.394000, -42.945000, 34.000000], [ -48.549000, -40.784000, 34.000000], [ -57.787000, -49.890000, 23.999000]);
    mesh.triangle([ -57.787000, -49.890000, 23.999000], [ -48.549000, -40.784000, 34.000000], [ -60.097000, -45.567000, 23.999000]);
    mesh.triangle([ -45.839000, -44.839000, 34.000000], [ -47.394000, -42.945000, 34.000000], [ -54.678000, -53.678000, 23.999000]);
    mesh.triangle([ -54.678000, -53.678000, 23.999000], [ -47.394000, -42.945000, 34.000000], [ -57.787000, -49.890000, 23.999000]);
    mesh.triangle([ -45.839000, -44.839000, 34.000000], [ -54.678000, -53.678000, 23.999000], [ -50.890000, -56.787000, 23.999000]);
    mesh.triangle([ -42.303800, -41.303800, 38.000000], [ -48.112000, -50.967000, 38.000000], [ -51.142000, -48.728000, 38.000000]);
    mesh.triangle([ -50.890000, -56.787000, 23.999000], [ -46.567000, -59.097000, 23.999000], [ -43.945000, -46.394000, 34.000000]);
    mesh.triangle([ -44.356500, -37.463500, 38.000000], [ -55.478000, -42.888000, 38.000000], [ -56.616000, -39.512000, 38.000000]);
    mesh.triangle([ -43.236800, -40.167300, 38.000000], [ -51.142000, -48.728000, 38.000000], [ -53.630000, -46.001000, 38.000000]);
    mesh.triangle([ -53.630000, -46.001000, 38.000000], [ -55.478000, -42.888000, 38.000000], [ -43.929900, -38.870600, 38.000000]);
    mesh.triangle([ -44.500500, -36.000000, 38.000000], [ -56.616000, -39.512000, 38.000000], [ -57.001000, -36.000000, 38.000000]);
    mesh.triangle([ -57.001000, -36.000000, 38.000000], [ -56.616000, -32.488000, 38.000000], [ -44.500500, -36.000000, 38.000000]);
    mesh.triangle([ -56.616000, -39.512000, 38.000000], [ -47.000000, -36.000000, 48.000000], [ -57.001000, -36.000000, 38.000000]);
    mesh.triangle([ -46.808000, -37.756000, 48.000000], [ -47.000000, -36.000000, 48.000000], [ -56.616000, -39.512000, 38.000000]);
    mesh.triangle([ -53.630000, -46.001000, 38.000000], [ -45.315000, -41.000000, 48.000000], [ -46.239000, -39.444000, 48.000000]);
    mesh.triangle([ -46.239000, -39.444000, 48.000000], [ -55.478000, -42.888000, 38.000000], [ -53.630000, -46.001000, 38.000000]);
    mesh.triangle([ -51.142000, -48.728000, 38.000000], [ -45.315000, -41.000000, 48.000000], [ -53.630000, -46.001000, 38.000000]);
    mesh.triangle([ -44.071000, -42.364000, 48.000000], [ -45.315000, -41.000000, 48.000000], [ -51.142000, -48.728000, 38.000000]);
    mesh.triangle([ -44.071000, -42.364000, 48.000000], [ -51.142000, -48.728000, 38.000000], [ -48.112000, -50.967000, 38.000000]);
    mesh.triangle([ -55.478000, -29.112000, 38.000000], [ -56.616000, -32.488000, 38.000000], [ -46.808000, -34.244000, 48.000000]);
    mesh.triangle([ -46.808000, -34.244000, 48.000000], [ -46.239000, -32.556000, 48.000000], [ -55.478000, -29.112000, 38.000000]);
    mesh.triangle([ -57.001000, -36.000000, 38.000000], [ -46.808000, -34.244000, 48.000000], [ -56.616000, -32.488000, 38.000000]);
    mesh.triangle([ -49.500000, -36.000000, 34.000000], [ -62.001000, -36.000000, 23.999000], [ -61.520000, -40.877000, 23.999000]);
    mesh.triangle([ -49.500000, -36.000000, 34.000000], [ -49.260000, -33.561000, 34.000000], [ -62.001000, -36.000000, 23.999000]);
    mesh.triangle([ -62.001000, -36.000000, 23.999000], [ -49.260000, -33.561000, 34.000000], [ -61.520000, -31.123000, 23.999000]);
    mesh.triangle([ -49.260000, -38.439000, 34.000000], [ -44.356500, -37.463500, 38.000000], [ -49.500000, -36.000000, 34.000000]);
    mesh.triangle([ -42.556000, -43.483000, 48.000000], [ -44.071000, -42.364000, 48.000000], [ -48.112000, -50.967000, 38.000000]);
    mesh.triangle([ -42.556000, -43.483000, 48.000000], [ -48.112000, -50.967000, 38.000000], [ -44.654000, -52.630000, 38.000000]);
    mesh.triangle([ -44.654000, -52.630000, 38.000000], [ -40.827000, -44.315000, 48.000000], [ -42.556000, -43.483000, 48.000000]);
    mesh.triangle([ -42.556000, -28.517000, 48.000000], [ -48.112000, -21.033000, 38.000000], [ -51.142000, -23.272000, 38.000000]);
    mesh.triangle([ -40.902000, -18.345000, 38.000000], [ -37.000000, -17.999000, 38.000000], [ -38.463500, -28.643500, 38.000000]);
    mesh.triangle([ -39.870600, -29.070100, 38.000000], [ -41.167300, -29.763200, 38.000000], [ -44.654000, -19.370000, 38.000000]);
    mesh.triangle([ -38.951000, -27.173000, 48.000000], [ -40.902000, -18.345000, 38.000000], [ -44.654000, -19.370000, 38.000000]);
    mesh.triangle([ -38.951000, -27.173000, 48.000000], [ -44.654000, -19.370000, 38.000000], [ -40.827000, -27.685000, 48.000000]);
    mesh.triangle([ -40.827000, -27.685000, 48.000000], [ -48.112000, -21.033000, 38.000000], [ -42.556000, -28.517000, 48.000000]);
    mesh.triangle([ -40.827000, -27.685000, 48.000000], [ -44.654000, -19.370000, 38.000000], [ -48.112000, -21.033000, 38.000000]);
    mesh.triangle([ -42.556000, -28.517000, 48.000000], [ -51.142000, -23.272000, 38.000000], [ -44.071000, -29.636000, 48.000000]);
    mesh.triangle([ -44.654000, -19.370000, 38.000000], [ -40.902000, -18.345000, 38.000000], [ -39.870600, -29.070100, 38.000000]);
    mesh.triangle([ -48.112000, -21.033000, 38.000000], [ -44.654000, -19.370000, 38.000000], [ -41.167300, -29.763200, 38.000000]);
    return mesh;
}

// create a cube
function createCube(x, y, z, size) {
    var mesh = new Mesh3D();
    mesh.quad([x, y, z], [x, y+size, z],
                [x+size, y+size, z], [x+size, y, z]);
    mesh.quad([x, y, z], [x+size, y, z],
                [x+size, y, z+size], [x, y, z+size]);
    mesh.quad([x+size, y, z], [x+size, y+size, z],
                [x+size, y+size, z+size], [x+size, y, z+size]);
    mesh.quad([x, y, z], [x, y, z+size],
                [x, y+size, z+size], [x, y+size, z]);
    mesh.quad([x, y+size, z], [x, y+size, z+size],
                [x+size, y+size, z+size], [x+size, y+size, z]);
    mesh.quad([x, y, z+size], [x+size, y, z+size],
                [x+size, y+size, z+size], [x, y+size, z+size]);
    return mesh;
}

function sliceOne() {
    // create a tree and a cube at different position
    var treeOne = createTree();
    // change x coordinate [0] from -10 to -65
    var cubeOne = createCube(-40,-100,-20,cutSize);
    // subtract cube from mesh and callback
    treeOne.subtract(cubeOne, function(){return treeOne;});
}

function sliceTwo() {
    var treeTwo = createTree();
    var cubeTwo = createCube(-40-cutSize,-100,-20,cutSize);
    // matrix for transition of treeTwo
    var matrix = new Matrix3D();
    matrix.translation([cutDistance, 0, 0]);
    treeTwo.transform(matrix);
    // subtract cube from mesh and callback
    treeTwo.subtract(cubeTwo, function(){return treeTwo;});
}

function shapeGeneratorEvaluate(params, callback){
    var treeOne = sliceOne();
    var treeTwo = sliceTwo();
    treeOne.unite(treeTwo, function(mesh) {
        callback(Solid.make(mesh));
    });
}
